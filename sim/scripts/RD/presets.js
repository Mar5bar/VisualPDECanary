// presets.js

let presets = {};

presets["dynamicalSystemsVisualisationTopography"] = {
  arrowX: "u",
  arrowY: "v",
  brushAction: "smoothadd",
  brushRadius: "2",
  brushValue: "1",
  colourbar: true,
  colourmap: "greyscale",
  crossDiffusion: true,
  diffusionStr_1_1: "0.1",
  diffusionStr_2_2: "10*ind(t<1)",
  domainScale: "100",
  dt: 0.001,
  emboss: true,
  embossSpecular: 0.1,
  embossTheta: 0.2,
  guiUpdatePeriod: 3,
  imagePathTwo: "./images/topography.webp",
  initCond_1: "1",
  initCond_2: "10*I_T(x/2,y/2)+20*(x/L_x-0.5)",
  kineticParams:
    "a = 1.1 in [0.01, 0.01, 10];m = 0.630 in [0.2, 0.01, 1];V = 100;",
  numAlgebraicSpecies: 2,
  numSpecies: 4,
  numTimestepsPerFrame: 50,
  preset: "dynamicalSystemsVisualisationTopography",
  resetOnImageLoad: true,
  reactionStr_1: "-c*(u_x+v_y) - u*c_x - v*c_y",
  reactionStr_2: "0",
  reactionStr_3: "-T_x",
  reactionStr_4: "-T_y",
  simTitle: "Dynamical systems visualisation",
  spatialStep: "0.5",
  speciesNames: "c T u v",
  squareCanvas: true,
  surfaceFun: "3*u",
  vectorField: true,
  maxColourValue: "1",
  minColourValue: "0",
  whatToDraw: "c",
  whatToPlot: "c",
};

presets["bacteriaInAReach"] = {
  boundaryConditions_1: "combo",
  brushAction: "smoothadd",
  brushRadius: "20",
  brushType: "vline",
  brushValue: "min(0.02, 1-C)",
  colourbar: true,
  colourmap: "turbo",
  comboStr_1: "Left: Dirichlet = c0; Right: Ghost = 0;",
  diffusionStr_1_1: "0",
  diffusionStr_2_2: "0",
  dimension: "1",
  domainScale: "320",
  dt: 0.01,
  initCond_2: "0",
  kineticParams:
    "c0 = 0.77 in [0, 1];k = 0.006 in [0, 0.1];u = 0.62 in [0.1, 2];",
  maxColourValue: "1",
  numSpecies: 1,
  plotType: "line",
  preset: "bacteriaInAReach",
  reactionStr_1: "-u*C_xb - k*C",
  reactionStr_2: "0",
  simTitle: "Modelling bacteria in a reach",
  spatialStep: "1.5",
  speciesNames: "C",
  views: [
    {
      name: "Concentration",
    },
  ],
  whatToDraw: "C",
  whatToPlot: "C",
};

presets["StochasticGrayScott"] = {
  diffusionStr_2_2: "4",
  domainScale: "300",
  dt: 0.005,
  initCond_1: "H(20-((x-L_x/2)^2+(y-L_y/2)^2))",
  kineticParams:
    "a = 0.037 in [0, 0.1];b = 0.04 in [0.04, 0.1];sigma = 0.00 in [0, 0.3];",
  maxColourValue: "0.5",
  numTimestepsPerFrame: 400,
  parent: "GrayScott",
  preset: "StochasticGrayScott",
  reactionStr_1: "u^2*v - (a+b)*u+sigma*WhiteNoise*u",
  simTitle: "Stochastic Gray–Scott",
  spatialStep: "0.4",
};

presets["RandomWaveEquation"] = {
  boundaryConditions_1: "periodic",
  boundaryConditions_2: "periodic",
  brushRadius: "1",
  brushValue: "10",
  diffusionStr_1_1: "d",
  diffusionStr_2_1: "eta",
  diffusionStr_3_3: "ind(t<d)",
  dt: 0.0005,
  initCond_1: "0",
  initCond_3: "max(1+sigma*RANDN/sqrt(dx^2),0)",
  kineticParams: "sigma = 0.5 in [0, 1];d=0.005;",
  maxColourValue: "1",
  minColourValue: "0",
  numSpecies: "3",
  parent: "waveEquation",
  preset: "RandomWaveEquation",
  simTitle: "Random wave equation",
  spatialStep: "0.2",
  speciesNames: "u v eta q",
  views: [
    {
      name: "$u$",
      whatToPlot: "u",
    },
    {
      name: "$v$",
      whatToPlot: "v",
    },
  ],
};

presets["StochasticKlausmeier"] = {
  brushType: "vline",
  dimension: "1",
  domainScale: "100",
  dt: 0.0005,
  kineticParams:
    "a = 2 in [0.01, 0.01, 10];m = 0.540 in [0.2, 0.01, 1];V = 50;sigma = 0.4 in [0, 3];",
  minColourValue: 0,
  parent: "KlausmeierModel",
  preset: "StochasticKlausmeier",
  reactionStr_1: "w*n^2-m*n+sigma*WhiteNoise*(n/(1+n))",
  simTitle: "Stochastic Klausmeier",
  spatialStep: "0.5",
  views: [
    {
      colourmap: "foliage",
      emboss: false,
      maxColourValue: "9",
      plotType: "line",
      whatToPlot: "n",
      name: "Foliage",
    },
    {
      colourmap: "water",
      emboss: true,
      maxColourValue: 0.33,
      plotType: "plane",
      whatToPlot: "w",
      name: "Water",
    },
  ],
};

presets["BMB"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  colourmap: "viridis",
  diffusionStr_1_1: "0.03",
  domainScale: "75",
  flippedColourmap: true,
  imagePathOne: "./images/bmb.webp",
  initCond_1: "1-2*I_S",
  maxColourValue: "2.3",
  minColourValue: "0",
  numTimestepsPerFrame: 80,
  parent: "Sofya",
  preset: "BMB",
  resetOnImageLoad: true,
  reactionStr_1: "2*(1-2*I_S) - u + u^2*v",
  simTitle: "Bulletin of Mathematical Biology",
  spatialStep: "0.2",
};

presets["SMB"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushRadius: "5.6",
  brushValue: "1",
  colourmap: "midnight",
  crossDiffusion: true,
  diffusionStr_1_1: "1",
  diffusionStr_1_2: "-c*u/(1+u^2)",
  diffusionStr_2_2: "D",
  diffusionStr_3_3: "0",
  dt: 0.01,
  emboss: true,
  imagePathOne: "./images/smb_mask.webp",
  imagePathTwo: "./images/smb.webp",
  initCond_1: "0.1*RAND",
  kineticParams:
    "c = 3.00 in [3, 0.1, 4];D = 4 in [0, 4];a = 0.1 in [0, 0.2];omega = 0.01;",
  maxColourValue: "1",
  minColourValue: "0",
  preset: "SMB",
  reactionStr_1: "u*(I_T-u)*min(max(omega*t - 1+I_SR, 0),1)",
  reactionStr_2: "(u-a*v)*min(max(omega*t - 1+I_SR, 0),1)",
  reactionStr_3: "0",
  simTitle: "Society for Mathematical Biology",
  spatialStep: "0.5",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["WavesOnABeach"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushAction: "smoothadd",
  brushRadius: "50",
  brushType: "vline",
  brushValue: "0.01",
  colourmap: "water",
  crossDiffusion: true,
  diffusionStr_1_1: "D",
  diffusionStr_2_1: "h",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: "1",
  domainScale: "1000",
  dt: 0.005,
  initCond_1: "0",
  initCond_3:
    "0.1 +(k*(x/L_x - 0.2))*ind(x/L_x>0.2)*ind(x/L_x < 0.2+(m-0.1)/k) + (m-0.1)*ind(x/L_x > 0.2+(m-0.1)/k)",
  kineticParams:
    "D = 0.1;k = 10.00 in [1, 0.1, 10];m = 1.00 in [1, 5];LHS = 0.20 in [0, 1];",
  minColourValue: "-m",
  numAlgebraicSpecies: 1,
  numSpecies: "3",
  numTimestepsPerFrame: 400,
  overlay: true,
  overlayExpr: "-h",
  plotType: "line",
  preset: "WavesOnABeach",
  reactionStr_1: "v",
  reactionStr_2: "0",
  reactionStr_3:
    "0.1 +(k*(x/L_x - LHS))*ind(x/L_x>LHS)*ind(x/L_x < LHS+(m-0.1)/k) + (m-0.1)*ind(x/L_x > LHS+(m-0.1)/k)",
  simTitle: "Waves on a beach",
  spatialStep: "3",
  speciesNames: "u v h q",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["landslides"] = {
  colourbar: false,
  contourEpsilon: 0.001,
  contourNum: 6,
  customSurface: true,
  diffusionStrVV: "0.1*ind(t<3)",
  imagePathTwo: "./images/landslides.jpeg",
  initCond_2: "20*(1-I_T)",
  parent: "WaterOnTopography",
  preset: "landslides",
  simTitle: "Landslides on a landscape",
  surfaceFun: "4*T",
  views: [
    {
      colourmap: "terrain",
      contours: true,
      emboss: false,
      maxColourValue: "1",
      minColourValue: "0",
      plotType: "plane",
      whatToPlot: "T/30",
      name: "Topography",
    },
    {
      colourmap: "terrain",
      contours: true,
      emboss: true,
      maxColourValue: "1",
      minColourValue: "0",
      plotType: "surface",
      whatToPlot: "ind(h>0.5)*0.6 + ind(h<0.5)*T/30",
      name: "Mud on Topography",
    },
  ],
};

presets["floodingOxford"] = {
  brushAction: "replace",
  brushRadius: "5",
  brushValue: "1",
  colourbar: false,
  diffusionStr_2_2: "0.01*ind(t<30)",
  diffusionStrQQ: "0",
  dt: "0.004",
  embossSpecular: 0,
  imagePathTwo: "./images/oxford.png",
  initCond_2: "15*(1-I_TB)",
  initCond_3: "ind(I_TB > 0.99)",
  kineticParams:
    "F_max = 20;r = 0.01 in [0.01, 0.01, 2];a = 0.001 in [0.001,0.02];",
  numTimestepsPerFrame: 250,
  numSpecies: "4",
  parent: "WaterOnTopography",
  reactionStr_1: "r*ind(s>0) - a*h*ind(s<1)",
  reactionStrQ: "ind(h>0.5)*ind(d<1)",
  simTitle: "Flooding in Oxford (UK)",
  spatialStep: "0.6",
  speciesNames: "h T s d",
  surfaceFun: "2*T",
  suppressTryClickingPopup: true,
  views: [
    {
      autoSetColourRange: true,
      colourmap: "greyscale",
      customSurface: false,
      emboss: false,
      flippedColourmap: false,
      maxColourValue: "9.956294059753418",
      minColourValue: "0",
      whatToPlot: "T",
      name: "Topography",
    },
    {
      colourmap: "diverging",
      customSurface: false,
      emboss: false,
      flippedColourmap: false,
      maxColourValue: "1",
      minColourValue: "0",
      whatToPlot: "d+0.5",
      name: "Damage",
    },
    {
      colourmap: "urbanFlooding",
      customSurface: true,
      emboss: true,
      flippedColourmap: true,
      maxColourValue: "1.9",
      minColourValue: "0",
      whatToPlot: "ind(h<=0)*(ind(T>0)*0.1*T + ind(T<0)*0.05)",
      name: "Water on Topography",
    },
  ],
  whatToDraw: "h",
  preset: "floodingOxford",
};

presets["WaterOnTopographySpringDamsHighres"] = {
  dt: 0.002,
  parent: "WaterOnTopographySpringDams",
  preset: "WaterOnTopographySpringDamsHighres",
  spatialStep: "0.5",
};

presets["WaterOnTopographySpringHighres"] = {
  dt: 0.002,
  parent: "WaterOnTopographySpring",
  preset: "WaterOnTopographySpringHighres",
  spatialStep: "0.5",
};

presets["WaterOnTopographySpringDams"] = {
  brushRadius: "5",
  brushValue: "max(4,T) - T",
  initCond_3: "exp(-10*((x-0.75*L_x)^2 + (y-0.63*L_y)^2))",
  kineticParams: "F_max = 20;r = 1.0 in [0, 2];a=0.003 in [0,0.005]",
  parent: "WaterOnTopographySpring",
  preset: "WaterOnTopographySpringDams",
  reactionStr_1: "r*ind(s>0) - a*ind(h>0)",
  whatToDraw: "T",
};

presets["WaterOnTopographySpring"] = {
  initCond_3: "exp(-10*((x-0.75*L_x)^2 + (y-0.63*L_y)^2))",
  parent: "WaterOnTopography",
  preset: "WaterOnTopographySpring",
  reactionStr_1: "r*ind(s>0)",
  whatToDraw: "s",
};

presets["WaterOnTopographyHighres"] = {
  dt: 0.002,
  parent: "WaterOnTopography",
  preset: "WaterOnTopographyHighres",
  spatialStep: "0.5",
};

presets["WaterOnTopography"] = {
  activeViewInd: 4,
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushAction: "add",
  brushRadius: "2",
  brushValue: "10",
  comboStr_1:
    "Left: Ghost = -1; Right: Ghost = -1; Top: Ghost = -1; Bottom: Ghost = -1;",
  crossDiffusion: true,
  diffusionStr_1_1: "min(ind(h>0)*h^3,F_max)",
  diffusionStr_1_2: "min(ind(h>0)*h^3,F_max)",
  diffusionStr_2_2: "0.1*ind(t<30)",
  diffusionStr_3_3: "0",
  domainScale: "320",
  dt: 0.008,
  guiUpdatePeriod: 3,
  imagePathTwo: "./images/topography.webp",
  initCond_1: "0",
  initCond_2: "20*I_T(x/2,y/2)",
  initCond_3: "0*exp(-0.1*((x-L_x/2)^2 + (y-0.9*L_y)^2))",
  kineticParams: "F_max = 20;r = 1.0 in [0, 2];",
  numSpecies: "3",
  preset: "WaterOnTopography",
  resetOnImageLoad: true,
  reactionStr_1: "0",
  reactionStr_2: "(T_xx + T_yy)*ind(T_xx^2 + T_yy^2 > 0.5)",
  reactionStr_3: "0",
  robinStr_1: "-0.01*h",
  simTitle: "Water on a landscape",
  spatialStep: "0.8",
  speciesNames: "h T s",
  squareCanvas: true,
  views: [
    {
      cameraTheta: 30,
      cameraPhi: 30,
      colourmap: "water",
      colourbar: true,
      customSurface: false,
      emboss: false,
      flippedColourmap: false,
      maxColourValue: "9.951591491699219",
      minColourValue: "-0.16781748831272125",
      plotType: "plane",
      surfaceFun: "0",
      whatToPlot: "h",
      name: "Water",
    },
    {
      cameraTheta: 30,
      cameraPhi: 30,
      colourmap: "viridis",
      colourbar: true,
      customSurface: false,
      emboss: false,
      flippedColourmap: false,
      maxColourValue: "9.956294059753418",
      minColourValue: "0",
      plotType: "plane",
      surfaceFun: "0",
      whatToPlot: "T",
      name: "Topography",
    },
    {
      cameraTheta: 30,
      cameraPhi: 30,
      colourmap: "viridis",
      colourbar: true,
      customSurface: false,
      emboss: false,
      flippedColourmap: false,
      maxColourValue: "9.217119216918945",
      minColourValue: "0",
      plotType: "plane",
      surfaceFun: "0",
      whatToPlot: "h+T",
      name: "Total",
    },
    {
      cameraTheta: 30,
      cameraPhi: 30,
      colourmap: "retro",
      colourbar: true,
      customSurface: false,
      emboss: false,
      flippedColourmap: false,
      maxColourValue: "1",
      minColourValue: "0",
      plotType: "plane",
      surfaceFun: "0",
      whatToPlot: "s",
      name: "Sources",
    },
    {
      cameraTheta: 39.60000000000032,
      cameraPhi: 13.679999999999934,
      colourmap: "viridis",
      colourbar: false,
      customSurface: true,
      emboss: true,
      flippedColourmap: true,
      maxColourValue: "9.217119216918945",
      minColourValue: "-1",
      plotType: "surface",
      surfaceFun: "4*T",
      whatToPlot: "ind(h>0.5)*6.8 + ind(h<0.5)*(T-7)",
      name: "Water on Topography",
    },
  ],
  whatToDraw: "h",
};

presets["ZKSoliton"] = {
  brushAction: "smoothreplace",
  brushEnabled: false,
  brushRadius: "20",
  cameraPhi: 10.904738427754285,
  cameraTheta: 51.809287124743044,
  cameraZoom: 0.9330806239976674,
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_2: "-1",
  diffusionStr_1_3: "-b",
  diffusionStr_2_2: "0",
  diffusionStr_3_1: "1",
  diffusionStr_3_3: "0",
  domainScale: "350",
  dt: 0.005,
  guiUpdatePeriod: 3,
  initCond_1: "1/cosh(a*(x^2+y^2))^2",
  kineticParams: "a = 0.06;b = 0.008;",
  maxColourValue: "1.3",
  minX: "-L_x/2",
  minY: "-L_y/2",
  numAlgebraicSpecies: 2,
  numSpecies: "3",
  plotType: "surface",
  preset: "ZKSoliton",
  reactionStr_1: "-u*v",
  reactionStr_2: "u_x",
  reactionStr_3: "0",
  simTitle: "Zakharov–Kuznetsov with solitons",
  spatialStep: "1",
  squareCanvas: true,
  threeDHeightScale: 0.5,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["SpanishFluWave"] = {
  boundaryConditions_1: "neumann",
  brushEnabled: false,
  brushType: "vline",
  colourbar: true,
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainIndicatorFun: "0.5-I_S",
  domainViaIndicatorFun: true,
  dt: 0.001,
  imagePathOne: "./images/USA.jpg",
  initCond_1: "H(0.2-((x-0.4*L_x)^2+(y-0.25*L_y/2)^2))",
  kineticParams: "beta= 1 in [0, 0.1, 5];delta = 0",
  minX: "-L_x/2",
  minY: "-L_y/2",
  numSpecies: 1,
  preset: "SpanishFluWave",
  reactionStr_1: "beta*p*(1-p)-delta*p",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Spanish flu in the USA",
  spatialStep: "0.3",
  speciesNames: "p v w q",
  squareCanvas: true,
  whatToDraw: "p",
  whatToPlot: "p",
};

presets["lavaFlow"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushValue: "50",
  cameraPhi: 16.839622641509724,
  cameraTheta: 89.99993985893353,
  cameraZoom: 0.5041995277796872,
  colourbar: true,
  colourmap: "lavaflow",
  comboStr_1:
    "Left: Ghost = -1; Right: Ghost = -1; Top: Ghost = -1; Bottom: Ghost = -1;",
  crossDiffusion: true,
  diffusionStr_1_1: "min(ind(u>0)*u^3,F_max)",
  diffusionStr_1_2: "min(ind(u>0)*u^3,F_max)",
  diffusionStr_2_2: "0.001",
  diffusionStr_3_3: "0",
  domainScale: "320",
  dt: 0.01,
  initCond_1: "0",
  initCond_2: "40*y/L_y",
  initCond_3: "exp(-0.1*((x-L_x/2)^2 + (y-0.9*L_y)^2))",
  kineticParams: "F_max = 20;r = 2.00 in [0,2];",
  maxColourValue: "3",
  minColourValue: "0",
  numSpecies: "3",
  preset: "lavaFlow",
  reactionStr_1: "r*ind(s)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  robinStr_1: "-0.01*u",
  simTitle: "Lava flow",
  spatialStep: "1",
  speciesNames: "u T s",
  squareCanvas: true,
  views: [
    {
      name: "Lava",
      whatToPlot: "u",
      colourmap: "lavaflow",
      maxColourValue: "3",
      minColourValue: "0",
    },
    {
      name: "Topography",
      whatToPlot: "T",
      colourmap: "squirrels",
      minColourValue: "0",
      maxColourValue: "50",
    },
    {
      name: "Total",
      whatToPlot: "u+T",
      plotType: "plane",
    },
    {
      name: "Sources",
      whatToPlot: "s",
      maxColourValue: "1",
      colourmap: "retro",
    },
  ],
  whatToDraw: "T",
};

presets["DecontaminationDirichlet"] = {
  brushEnabled: false,
  boundaryConditions_1: "combo",
  parent: "DecontaminationDemo",
  preset: "DecontaminationDirichlet",
};

presets["DecontaminationDemoSpots"] = {
  brushRadius:
    "ind(yB<h*L_y)*(0.05^2 - ((x-xB)^2+(y-yB)^2)) + ind(yB>=h*L_y)*(0.05^2 - ((x-xB)^2+(y-h*L_y)^2))",
  parent: "DecontaminationDemo",
  preset: "DecontaminationDemoSpots",
};

presets["DecontaminationDemo"] = {
  activeViewInd: 1,
  brushType: "custom",
  brushRadius:
    "ind(yB<h*L_y)*(0.05^2 - ((x-xB)^2+(y-yB)^2)) + ind(yB>=h*L_y)*ind(y>=h*L_y)",
  kineticParams:
    "k = 0.10 in [0,0.5];chi = 1.00 in [0, 2];R_0 = 0.1 in [0.05,0.5];D_c = 0.0500 in [0.01,0.05];R_init = 0.4 in [0.1, 0.5];h = 0.95;BC = 1",
  overlay: true,
  overlayExpr: "y-h*L_y",
  parent: "DecontaminationAgentOnWalls",
  preset: "DecontaminationDemo",
  simTitle: "Chemical decontamination",
  views: [
    {
      colourmap: "chemicalBlue",
      maxColourValue: "1",
      minColourValue: "0",
      whatToPlot: "c*ind(y<h*L_y)",
      name: "Cleanser",
    },
    {
      colourmap: "chemicalGreen",
      maxColourValue: "pi*(R_init-R_0)^2",
      minColourValue: "0",
      whatToPlot: "pi*(R-R_0)^2*ind(y<h*L_y)",
      name: "Contaminant",
    },
  ],
};

presets["DecontaminationAgentOnWalls"] = {
  activeViewInd: 1,
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushAction: "smoothadd",
  brushRadius: "0.05",
  brushValue: "1",
  colourbar: true,
  comboStr_1:
    "Top: Dirichlet = BC; Bottom: Neumann = 0; Left: Neumann = 0; Right: Neumann = 0;",
  contours: true,
  contourEpsilon: 0.005,
  contourNum: 3,
  crossDiffusion: true,
  diffusionStr_1_1: "phi*D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "1",
  dt: 0.00005,
  initCond_1: "0",
  initCond_2: "R_init",
  initCond_3: "pi*0.4^2",
  initCond_4: "sqrt(1-4*0.4^2)",
  kineticParams:
    "k = 0.10 in [0,0.5];chi = 1.00 in [0, 2];R_0 = 0.1 in [0.05,0.5];D_c = 0.0500 in [0.01,0.05];R_init = 0.4 in [0.1, 0.5];BC = 1",
  numAlgebraicSpecies: 2,
  numSpecies: "4",
  numTimestepsPerFrame: 200,
  preset: "DecontaminationAgentOnWalls",
  reactionStr_1: "min(- 2*pi * R * k * (1+chi*c)*c, 0)",
  reactionStr_2: "-chi * k * c * H(R - R_0)",
  reactionStr_3: "1-pi*R^2",
  reactionStr_4: "D_c*sqrt(max(1 - 4*R^2,0))",
  simTitle: "Chemical decontamination",
  spatialStep: "0.005",
  speciesNames: "c R phi D",
  timescales: true,
  timescale_1: "phi",
  views: [
    {
      colourmap: "chemicalBlue",
      contours: false,
      maxColourValue: "1",
      minColourValue: "0",
      whatToPlot: "c",
      name: "$c$",
    },
    {
      colourmap: "chemicalGreen",
      contours: true,
      maxColourValue: "R_init",
      minColourValue: "R_0",
      whatToPlot: "R",
      name: "$R$",
    },
    {
      colourmap: "turbo",
      contours: false,
      maxColourValue: "0.05",
      minColourValue: "0.03",
      whatToPlot: "D",
      name: "$D$",
    },
    {
      colourmap: "chemicalGreen",
      contours: true,
      maxColourValue: "pi*(R_init-R_0)^2",
      minColourValue: "0",
      whatToPlot: "pi*(R-R_0)^2",
      name: "Contaminant",
    },
  ],
  whatToDraw: "c",
  whatToPlot: "c",
};

presets["Jack"] = {
  backgroundColour: 0,
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  colourmap: "spooky",
  domainIndicatorFun: "I_S < 0.3",
  domainScale: "2500",
  domainViaIndicatorFun: true,
  dt: 0.4,
  imagePathOne: "./images/pumpkin.webp",
  initCond_1:
    "exp(-0.1*((x-0.415*L_x)^2 + (y-0.717*L_y)^2)) + exp(-0.1*((x-0.74*L_x)^2 + (y-0.9235*L_y)^2))",
  maxColourValue: "0.3",
  minColourValue: "0",
  parent: "GrayScott",
  simTitle: "Jack–o'–lantern",
  spatialStep: "5",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  preset: "Jack",
};

presets["differentialStiffness"] = {
  boundaryConditions_1: "combo",
  boundaryConditions_2: "combo",
  boundaryConditions_3: "combo",
  brushEnabled: false,
  brushRadius: "0.5",
  brushType: "vline",
  brushValue: "0.01",
  comboStr_1: "Left: Dirichlet = 0; Left: Neumann = 0.2*sin(2*t);",
  comboStr_2: "Right: Dirichlet = 0; Right: Neumann = 0;",
  comboStr_3: "Right: Dirichlet = 0; Right: Neumann = 0;",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_3: "-1",
  diffusionStr_2_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: "1",
  domainScale: "1",
  dt: 0.00005,
  initCond_1: "0",
  kineticParams: "E = 0.0001;Delta_E = 24 in [0, 24];",
  neumannStr_1: "0.1*sin(t/100)",
  numAlgebraicSpecies: 2,
  numSpecies: "3",
  numTimestepsPerFrame: 200,
  overlay: true,
  overlayColour: 8355711,
  overlayExpr: "0",
  overlayLineWidthMul: 0.5,
  plotType: "line",
  preset: "differentialStiffness",
  reactionStr_1: "0",
  reactionStr_2: "0",
  reactionStr_3: "E*((1+tanh(v/0.01))*Delta_E/2+1)*v",
  simTitle: "Beams with differential stiffness",
  spatialStep: "0.04",
  timesteppingScheme: "Mid",
  views: [
    {
      colourmap: "blue",
      maxColourValue: "0.038",
      minColourValue: "-0.038",
      whatToPlot: "u",
      name: "Displacement",
    },
    {
      colourmap: "blue",
      maxColourValue: "4",
      minColourValue: -4,
      whatToPlot: "v",
      name: "Curvature",
    },
  ],
  whatToDraw: "u",
};

presets["BenchmarkingHighResFast"] = {
  numTimestepsPerFrame: 400,
  parent: "BenchmarkingHighRes",
  preset: "BenchmarkingHighResFast",
};

presets["BenchmarkingFast"] = {
  numTimestepsPerFrame: 400,
  parent: "Benchmarking",
  preset: "BenchmarkingFast",
};

presets["BenchmarkingHighRes"] = {
  domainScale: "500",
  parent: "Benchmarking",
  spatialStep: "1",
  preset: "BenchmarkingHighRes",
};

presets["Benchmarking"] = {
  activeViewInd: 0,
  arrowScale: "none",
  autoSetColourRange: true,
  boundaryConditions_1: "neumann",
  brushRadius: "20",
  brushValue: "10",
  colourbar: true,
  contourEpsilon: 0.001,
  contourNum: 7,
  diffusionStr_1_1: "0",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "320",
  dt: 0.01,
  initCond_1: "floor(10*x/L_x)",
  maxColourValue: "9",
  numSpecies: 1,
  overlay: true,
  overlayEpsilon: 5,
  overlayExpr: "mod(x-t,L_x)",
  preset: "Benchmarking",
  reactionStr_1: "0.02*(floor(10*x/L_x) - T)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  showStats: true,
  simTitle: "Benchmarking",
  spatialStep: "1.5",
  speciesNames: "T",
  views: [
    {
      arrowScale: "auto",
      autoSetColourRange: false,
      colourbar: false,
      vectorField: false,
      name: "Baseline",
    },
    {
      autoSetColourRange: false,
      colourbar: false,
      vectorField: true,
      name: "Vectors",
    },
    {
      autoSetColourRange: true,
      colourbar: true,
      vectorField: false,
      name: "Auto snap",
    },
  ],
  whatToDraw: "T",
  whatToPlot: "T",
};

presets["GrayScottPearsonClassificationRescaled"] = {
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "D",
  diffusionStr_3_3: "0",
  initCond_2: "1",
  kineticParams: "s = 2;D = 2;",
  maxColourValue: "1",
  parent: "GrayScottPearsonClassification",
  preset: "GrayScottPearsonClassificationRescaled",
  reactionStr_1: "u^2*v - (0.001+0.069*(y/L_y)^(s)+0.01+0.057*(x/L_x)^(1/s))*u",
  reactionStr_2: "-u^2*v + (0.001+0.069*(y/L_y)^(s))*(1 - v)",
  reactionStr_3: "0",
  simTitle: "Gray–Scott with Pearson's classification",
  views: [
    {
      maxColourValue: "1",
      whatToPlot: "v",
      name: "$$v$$",
    },
    {
      maxColourValue: "0.65",
      whatToPlot: "u",
      name: "$$u$$",
    },
  ],
  whatToDraw: "u",
};

presets["GrayScottPearsonClassification"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  colourmap: "BlackGreenYellowRedWhite",
  domainScale: "3500",
  dt: 0.2,
  emboss: true,
  initCond_1: "Bump(0,L_y,L/10)",
  kineticParams: "",
  maxColourValue: "0.65",
  parent: "GrayScott",
  reactionStr_1: "u^2*v - (0.07*y/L_y+0.02+0.048*x/L_x)*u",
  reactionStr_2: "-u^2*v + 0.07*y/L_y*(1 - v)",
  simTitle: "Gray–Scott with Pearson's classification",
  spatialStep: "5",
  preset: "GrayScottPearsonClassification",
};

presets["RedGreyInvasionUK"] = {
  activeViewInd: 1,
  arrowDensity: 0.267,
  arrowLengthMax: "0.01",
  arrowScale: "relative",
  arrowX: "-G_x",
  arrowY: "-G_y",
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  colourmap: "squirrels",
  contours: true,
  contourEpsilon: 0.005,
  contourNum: 1,
  diffusionStr_1_1: "0.4",
  diffusionStr_2_2: "0.4",
  diffusionStr_3_3: "0",
  domainIndicatorFun: "0.5-I_T",
  domainViaIndicatorFun: true,
  dt: 0.005,
  flippedColourmap: true,
  imagePathTwo: "./images/gb.webp",
  initCond_1: "1",
  initCond_2: "1/cosh(0.5*sqrt((x-L_x/10)^2+(y+0.8*L_y/2)^2))^2",
  kineticParams: "c_RR = 1;c_GG = 1;c_RG = 1;c_GR = 0.9;",
  maxColourValue: "0.5",
  minColourValue: "0",
  minX: "-L_x/2",
  minY: "-L_y/2",
  preset: "PRESETNAME",
  resetOnImageLoad: true,
  reactionStr_1: "R*(1-c_RR*R-c_RG*G)",
  reactionStr_2: "G*(1-c_GR*R-c_GG*G)",
  reactionStr_3: "0",
  simTitle: "Red and Grey Squirrels in the UK",
  spatialStep: "0.2",
  speciesNames: "R G",
  squareCanvas: true,
  vectorField: true,
  views: [
    {
      whatToPlot: "R",
      name: "Red Squirrels",
    },
    {
      whatToPlot: "G",
      name: "Grey Squirrels",
    },
  ],
  whatToDraw: "R",
};

presets["snail-trail"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  boundaryConditions_3: "dirichlet",
  brushRadius: "20",
  crossDiffusion: true,
  diffusionStr_1_1: "D",
  diffusionStr_1_3: "-n*chi",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dirichletStr_3: "(x/L_x)^2",
  domainScale: "1000",
  initCond_1: "0",
  initCond_3: "(x/L_x)^2",
  kineticParams:
    "D = 0.04;lambda = 0;beta_e = 0;beta_n = 0;chi = 10;kappa=0.01",
  numAlgebraicSpecies: 1,
  numSpecies: "3",
  preset: "snail-trail",
  reactionStr_1: "lambda*n*c - beta_e*n*e - beta_n*n^2",
  reactionStr_2: "kappa*sqrt((chi*n*c_x - D*c_x)^2 + (chi*n*c_y - D*c_y)^2)",
  reactionStr_3: "(x/L_x)^2",
  simTitle: "Snail-trail vasculogenesis",
  spatialStep: "3",
  speciesNames: "n e c",
  views: [
    {
      autoSetColourRange: false,
      maxColourValue: "1",
      whatToPlot: "n",
      name: "n",
    },
    {
      autoSetColourRange: true,
      maxColourValue: "0.16559255123138428",
      whatToPlot: "e",
      name: "e",
    },
    {
      autoSetColourRange: false,
      maxColourValue: "1",
      whatToPlot: "c",
      name: "c",
    },
  ],
  whatToDraw: "n",
  whatToPlot: "n",
};

presets["SofyaCGLEChaos"] = {
  autoSetColourRange: false,
  domainIndicatorFun: "I_S",
  domainScale: "500",
  initCond_1: "0.1",
  initCond_2: "0.1",
  kineticParams:
    "b_i = -1.5 in [-5, 5];D_r = 0.1;D_i = 15;a_r = -2;a_i = 1;b_r = -40;",
  maxColourValue: "6.6",
  minColourValue: "0",
  parent: "complexGinzburgLandau",
  reactionStr_1: "(a_r*u-a_i*v)+(b_r*u*(1.05-I_S)-b_i*v)*(u^2+v^2)",
  reactionStr_2: "(a_r*v+a_i*u)+(b_r*v*(1.05-I_S)+b_i*u)*(u^2+v^2)",
  simTitle: "Sofya and chaos",
  spatialStep: "1",
  squareCanvas: true,
  preset: "SofyaCGLEChaos",
};

presets["SofyaCGLEFireflies"] = {
  autoSetColourRange: false,
  colourmap: "thermal",
  domainIndicatorFun: "I_S",
  domainScale: "500",
  initCond_1: "0.1+0.01*RANDN",
  initCond_2: "0.1+0.01*RANDN",
  kineticParams:
    "b_i = 0.5 in [-5, 5];D_r = 0.5;D_i = 15;a_r = 1;a_i = 1;b_r = -0.5;n = 10;m = 10;",
  maxColourValue: "9",
  minColourValue: "0",
  parent: "complexGinzburgLandau",
  preset: "SofyaCGLEFireflies",
  resetOnImageLoad: true,
  reactionStr_1: "(a_r*u-a_i*v)+(b_r*u-b_i*v)*(I_S+1)*(u^2+v^2)",
  reactionStr_2: "(a_r*v+a_i*u)+(b_r*v+b_i*u)*(I_S+1)*(u^2+v^2)",
  simTitle: "Sofya and fireflies",
  spatialStep: "1",
  squareCanvas: true,
};

presets["SofyaCGLEDuckPinning"] = {
  autoSetColourRange: false,
  colourmap: "greyscale",
  domainIndicatorFun: "I_S",
  domainScale: "500",
  initCond_1: "0.1+0.01*RANDN",
  initCond_2: "0.1+0.01*RANDN",
  kineticParams:
    "b_i = 0 in [-5, 5];D_r = 0.5;D_i = 15;a_r = 8;a_i = -1;b_r = -1;n = 10;m = 10;",
  maxColourValue: "10",
  minColourValue: "2",
  parent: "complexGinzburgLandau",
  preset: "SofyaCGLEDuckPinning",
  resetOnImageLoad: true,
  reactionStr_1: "a_r*u*(1-I_S)-a_i*v+(b_r*u-b_i*v)*(u^2+v^2)",
  reactionStr_2: "a_r*v*(1-I_S)+a_i*u+(b_r*v+b_i*u)*(u^2+v^2)",
  simTitle: "Sofya and vortex pinning",
  spatialStep: "1",
  squareCanvas: true,
};

presets["TaylorGreen"] = {
  arrowColour: 9605778,
  arrowX: "u",
  arrowY: "v",
  brushAction: "smoothadd",
  brushRadius: "50",
  colourbar: true,
  colourmap: "water",
  crossDiffusion: true,
  diffusionStr_1_1: "0.1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "1000",
  initCond_1: "0",
  initCond_2: "1",
  kineticParams: "a = 2.0 in [0, 1, 10];b = 2.0 in [0, 1, 10]",
  numAlgebraicSpecies: 2,
  numSpecies: "3",
  preset: "TaylorGreen",
  reactionStr_1: "- u*n_x - v*n_y - 0.001*n",
  reactionStr_2: "cos(a*2*pi*x/L_x)*sin(b*2*pi*y/L_y)",
  reactionStr_3: "-sin(a*2*pi*x/L_x)*cos(b*2*pi*y/L_y)",
  simTitle: "Tracers in Taylor–Green vortices",
  spatialStep: "3",
  speciesNames: "n u v q",
  threeDHeightScale: 0.3,
  whatToDraw: "n",
  whatToPlot: "n",
};

presets["KlausmeierOnTopography"] = {
  boundaryConditions_3: "neumann",
  cameraTheta: -3.7,
  cameraPhi: 89,
  cameraZoom: 0.5307363450312499,
  crossDiffusion: true,
  customSurface: true,
  diffusionStr_2_2: "2",
  diffusionStr_2_3: "V*w",
  diffusionStr_3_3: "40*ind(t<0.1)",
  imagePathTwo: "./images/topography.webp",
  initCond_3: "10*I_T(x/2,y/2)+20*(x/L_x-0.5)",
  kineticParams:
    "a = 1.1 in [0.01, 0.01, 10];m = 0.630 in [0.2, 0.01, 1];V = 100;",
  minColourValue: "0",
  numSpecies: "3",
  numTimestepsPerFrame: 50,
  parent: "KlausmeierModel",
  plotType: "surface",
  preset: "KlausmeierOnTopography",
  resetOnImageLoad: true,
  reactionStr_2: "a-w-w*n^2",
  simTitle: "Klausmeier on a landscape",
  spatialStep: "0.5",
  speciesNames: "n w T",
  surfaceFun: "3*T",
  views: [
    {
      colourmap: "foliage",
      emboss: true,
      maxColourValue: "6",
      whatToPlot: "n",
      name: "Foliage",
    },
    {
      colourmap: "water",
      emboss: false,
      maxColourValue: "1",
      whatToPlot: "w",
      name: "Water",
    },
  ],
};

presets["LocalisedVegetation"] = {
  activeViewInd: 0,
  brushEnabled: false,
  colourmap: "water",
  diffusionStr_2_2: "7.2",
  domainScale: "300",
  emboss: true,
  embossAmbient: 0.479,
  embossDiffuse: 0.882,
  embossPhi: 1.593,
  embossSpecular: 0.438,
  embossTheta: 0.195,
  initCond_1:
    "1.07-0.4*(cos(0.331*x)+cos(0.331*(x-sqrt(3)*y)/2)+cos(0.331*(x+sqrt(3)*y)/2))*exp(-0.1*sqrt(x^2+y^2))",
  initCond_2:
    "0.467-0.4*(cos(0.331*x)+cos(0.331*(x-sqrt(3)*y)/2)+cos(0.331*(x+sqrt(3)*y)/2))*exp(-0.1*sqrt(x^2+y^2))",
  kineticParams:
    "a = 1.005 in [0.01, 0.01, 10];m = 0.500 in [0.2, 0.01, 1];V = 50",
  maxColourValue: "0.33",
  minColourValue: "0.007567491848021746",
  minX: "-L_x/2",
  minY: "-L_y/2",
  parent: "KlausmeierModel",
  plotType: "surface",
  preset: "LocalisedVegetation",
  reactionStr_2: "a-w-w*n^2",
  simTitle: "Klausmeier with localised vegetation",
  spatialStep: "0.375",
  threeDHeightScale: 0.05999999999999967,
  timeDisplay: true,
  views: [
    {
      colourmap: "foliage",
      embossAmbient: 0.5,
      embossDiffuse: 0.6,
      embossPhi: 1.5708,
      embossSpecular: 0.1,
      embossTheta: 0.2,
      maxColourValue: "1.5",
      plotType: "plane",
      whatToPlot: "n",
      name: "Foliage",
      minColourValue: "0.0",
    },
    {
      cameraTheta: 32.9363974671775,
      cameraPhi: 37.11878377408648,
      cameraZoom: 0.77615,
      colourmap: "water",
      embossAmbient: 0.479,
      embossDiffuse: 0.882,
      embossPhi: 1.593,
      embossSpecular: 0.438,
      embossTheta: 0.195,
      maxColourValue: "0.33",
      threeDHeightScale: 0.05999999999999967,
      whatToPlot: "w",
      name: "Water",
    },
  ],
  whatToPlot: "w",
};

presets["RainbowASHBI"] = {
  activeViewInd: 0,
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushRadius: "1",
  brushValue: "2",
  colourmap: "blue-magenta",
  diffusionStr_1_1: "0.01",
  diffusionStr_2_2: "0.7",
  diffusionStr_3_3: "0",
  domainIndicatorFun: "I_T<0.95",
  domainViaIndicatorFun: true,
  dt: 0.0005,
  fixRandSeed: true,
  imagePathTwo: "./images/ASHBi.webp",
  initCond_1: "RANDN",
  kineticParams: "a = 3;c = -1;n = 0;m = 0",
  maxColourValue: "3.1",
  numTimestepsPerFrame: 50,
  preset: "RainbowASHBI",
  resetOnImageLoad: true,
  reactionStr_1: "a*u-(u+c*v)*(u^2+v^2)",
  reactionStr_2: "a*v+(c*u-v)*(u^2+v^2)",
  reactionStr_3: "0",
  simTitle: "ASHBi",
  spatialStep: "0.1",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  timesteppingScheme: "Mid",
  views: [
    {
      colourmap: "midnight",
      emboss: false,
      maxColourValue: "9.5",
      minColourValue: -5,
      whatToPlot: "u^2+v^2",
      name: "1",
    },
    {
      colourmap: "turbo",
      emboss: false,
      maxColourValue: "3.1",
      whatToPlot: "u^2",
      name: 2,
    },
    {
      colourmap: "BlackGreenYellowRedWhite",
      emboss: true,
      maxColourValue: "3.1",
      whatToPlot: "u^2+v^2",
      name: 3,
    },
    {
      colourmap: "blue-magenta",
      emboss: false,
      maxColourValue: "3.1",
      whatToPlot: "u^2",
      name: 4,
    },
  ],
  whatToDraw: "u",
  whatToPlot: "u^2+v^2",
  constantDiffusion: false,
};

presets["GeneralisedWavePinningModel"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  boundaryConditions_3: "neumann",
  brushRadius: "0.1",
  colourbar: true,
  colourmap: "midnight",
  diffusionStr_1_1: "delta",
  diffusionStr_2_2: "1",
  diffusionStr_3_3: "0",
  domainIndicatorFun: "I_T<0.6",
  domainScale: "5",
  domainViaIndicatorFun: true,
  dt: 0.00002,
  emboss: true,
  embossPhi: 0.9,
  embossSmoothness: 0.3,
  fixRandSeed: true,
  initCond_1: "0.1*RANDN+10*1/cosh(5*((x-L_x/2)^2+(y-L_y/2)^2))",
  initCond_2: "1",
  initCond_3: "1",
  imagePathTwo: "./images/Flower.webp",
  kineticParams:
    "eta = 15*Ls^2;gamma = 30*Ls^2;s = 10*Ls^2;k = 1.5*Ls^2;n = 2;k_n = 24*Ls^2;k_s = 7.5*Ls^2;alpha = 1.5*Ls^2;theta = 4.5*Ls^2;c = 0.05 in [0, 1];delta=0.01;epsilon=0.1;Ls = 5;",
  maxColourValue: "1.8",
  numSpecies: "3",
  numTimestepsPerFrame: 150,
  preset: "GeneralisedWavePinningModel",
  reactionStr_1: "(k+gamma*u^n/(1+u^n))*v-(eta+s*F/(1+F))*u-c*theta*u",
  reactionStr_2: "-(k+gamma*u^n/(1+u^n))*v+(eta+s*F/(1+F))*u+c*alpha",
  reactionStr_3: "epsilon*(k_n*u-k_s*F)",
  simTitle: "Generalised wave pinning",
  spatialStep: "0.01",
  speciesNames: "u v F q",
  squareCanvas: true,
  timeDisplay: true,
  timesteppingScheme: "Euler",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["urticaria"] = {
  brushRadius: "0.05",
  colourbar: true,
  diffusionStr_1_1: "D_u",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "1",
  dt: 0.0005,
  initCond_1: "RAND*sin(4*pi*x/L_x)*sin(4*pi*y/L_y)",
  kineticParams:
    "D_u = 4.7*10^(-6);mu = 1.5;alpha_0 = 0.7;alpha_1 = 0.4;alpha_2 = 4.5;gamma = 4;U_t = 150",
  maxColourValue: "120",
  numSpecies: "2",
  preset: "urticaria",
  reactionStr_1:
    "gamma*u*ind(U<=U_t) - alpha_2*u/(alpha_1 + u^2) + mu - alpha_0*u",
  reactionStr_2: "gamma*u*ind(U<=U_t)",
  reactionStr_3: "0",
  simTitle: "Urticaria",
  spatialStep: "0.0025",
  speciesNames: "u U",
  views: [
    {
      maxColourValue: "120",
      whatToPlot: "u",
      name: "$u$",
    },
    {
      maxColourValue: "150",
      whatToPlot: "U",
      name: "$\\int_0^t\\gamma u \\mathrm{d}t$",
    },
  ],
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["TuringNotEnoughRD"] = {
  brushRadius: "5",
  brushValue: "0.1",
  colourbar: true,
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "D",
  diffusionStr_3_3: "0",
  dt: 0.002,
  fixRandSeed: true,
  initCond_1: "0.05*RANDN",
  initCond_2: "0.05*RANDN",
  kineticParams: "a = 1.75;b = 18;c = 2;d = 5;E = 0.02;D = 30;",
  maxColourValue: "2.8",
  minColourValue: -0.5,
  preset: "TuringNotEnoughRD",
  reactionStr_1: "u-v-E*u^3",
  reactionStr_2: "a*v*(v+c)*(v-d)+b*u-E*v^3",
  reactionStr_3: "0",
  simTitle: "Transient patterns: reaction–diffusion",
  spatialStep: "0.5",
  threeDHeightScale: 0.3,
  timeDisplay: true,
  timesteppingScheme: "Mid",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["TuringNotEnoughKellerSegel"] = {
  brushRadius: "2",
  brushValue: "0.9*b",
  colourbar: true,
  crossDiffusion: true,
  diffusionStr_1_1: "1",
  diffusionStr_1_2: "-c*u",
  diffusionStr_2_2: "D",
  diffusionStr_3_3: "0",
  domainScale: "80",
  dt: 0.002,
  fixRandSeed: true,
  initCond_1: "b+0.01*RANDN",
  initCond_2: "b/a",
  kineticParams: "c = 3;D = 1;a = 1;b = 1;d = 0.8 in [0, 1]",
  maxColourValue: "2",
  preset: "TuringNotEnoughKellerSegel",
  reactionStr_1: "u*(b-u)*(u-d)",
  reactionStr_2: "u-a*v",
  reactionStr_3: "0",
  simTitle: "Transient patterns: Keller–Segel",
  spatialStep: "0.2",
  suppressTryClickingPopup: true,
  threeDHeightScale: 0.3,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["TuringNotEnoughBiharmonic"] = {
  brushRadius: "2",
  brushValue: "0.9*c",
  colourbar: true,
  crossDiffusion: true,
  diffusionStr_1_1: "-D",
  diffusionStr_1_2: "-1",
  diffusionStr_2_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.001,
  fixRandSeed: true,
  initCond_1: "c+0.01*RANDN",
  kineticParams: "a = 5;b = 0.9 in [-2, 0.1, 2];c = 1;D = 1.45",
  maxColourValue: "1.2",
  minColourValue: -0.2,
  numAlgebraicSpecies: 1,
  numTimestepsPerFrame: 200,
  preset: "TuringNotEnoughBiharmonic",
  reactionStr_1: "a*u*(c-u)*(u-b)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Transient patterns: biharmonic",
  spatialStep: "0.5",
  threeDHeightScale: 0.3,
  timeDisplay: true,
  timesteppingScheme: "Mid",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["InhomogeneousFisherKPP"] = {
  arrowDensity: 1,
  boundaryConditions_1: "dirichlet",
  brushRadius: "5",
  initCond_1: "1/cosh(10*sqrt((x-L_x/2)^2+(y-L_y/2)^2))",
  diffusionStr_1_1: "D*(1+E*cos(n*pi*x/L_x)*cos(m*pi*y/L_y))",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.002,
  emboss: true,
  kineticParams: "D = 0.5;E = 1 in [0, 1];n = 40 in [1, 50];m = 37;",
  numSpecies: 1,
  preset: "InhomogeneousFisherKPP",
  reactionStr_1: "1*u*(1-u/(0.8+0.55*cos(n*pi*x/L_x)*cos(m*pi*y/L_y)))",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Inhomogeneous Fisher–KPP",
  spatialStep: "0.2",
  speciesNames: "u",
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["TuringWaveFHN2D"] = {
  brushType: "circle",
  dimension: "2",
  emboss: true,
  initCond_1: "0.816682 + 0.2*RAND",
  kineticParams:
    "delta = 1.1;a = 0.32;b = 5.0;d11 = -1;d12 = -1;d21 = 0;d22 = -2;tau = 0.1;D2 = 1",
  numTimestepsPerFrame: 100,
  parent: "TuringWaveFHN",
  plotType: "plane",
  preset: "TuringWaveFHN2D",
};

presets["TuringWaveFHN"] = {
  brushRadius: "2",
  brushType: "vline",
  initCond_1: "0.816682 + 0.05*RAND",
  initCond_2: "4.35762",
  colourbar: true,
  colourmap: "lavaflow",
  crossDiffusion: true,
  diffusionStr_1_1: "delta",
  diffusionStr_2_2: "delta",
  diffusionStr_3_1: "d11/tau",
  diffusionStr_3_2: "d12/tau",
  diffusionStr_3_3: "D2",
  diffusionStr_4_1: "d21/tau",
  diffusionStr_4_2: "d22/tau",
  diffusionStr_4_4: "D2",
  dimension: "1",
  domainScale: "30",
  dt: 0.0005,
  embossPhi: 0.9,
  embossSmoothness: 0.3,
  embossSpecular: 0.6,
  fixRandSeed: true,
  kineticParams:
    "delta = 1.1;a = 0.32;b = 5.0;d11 = -1;d12 = -1;d21 = 0;d22 = -2;tau = 0.1;D2 = 1",
  maxColourValue: "2.3",
  minColourValue: -2.3,
  numSpecies: "4",
  numTimestepsPerFrame: 200,
  plotType: "line",
  preset: "TuringWaveFHN",
  reactionStr_1: "w",
  reactionStr_2: "q",
  reactionStr_3: "(u - a*u^3 + v - b - w)/tau",
  reactionStr_4: "(b - u - 3*a*v - q)/tau",
  simTitle: "Turing waves in the FHN model",
  spatialStep: "0.1",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["SpuriousOscillations"] = {
  autoPause: true,
  autoPauseAt: 200,
  brushEnabled: false,
  brushRadius: "5",
  initCond_1: "1/cosh(x-L_x/10)^2",
  diffusionStr_1_1: "0",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: "1",
  domainScale: "50",
  dt: 0.0005,
  kineticParams: "c = 1;",
  numSpecies: "1",
  numTimestepsPerFrame: 400,
  overlay: true,
  overlayExpr: "1/cosh(mod(x-c*t,L_x)-L_x/10)^2",
  overlayLineWidthMul: 0.15,
  plotType: "line",
  preset: "SpuriousOscillations",
  reactionStr_1: "-c*u_x",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Spurious oscillations",
  spatialStep: "0.05",
  timeDisplay: true,
  timesteppingScheme: "AB2",
  brushType: "vline",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["BrusselatorTuringWave1D"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  boundaryConditions_3: "neumann",
  boundaryConditions_4: "neumann",
  brushEnabled: false,
  brushRadius: "5",
  initCond_1: "a*(1+0.2*cos(x*pi/L_x))",
  initCond_2: "b/a",
  colourbar: true,
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_2_2: "0",
  diffusionStr_3_1: "2/tau",
  diffusionStr_3_3: "epsilon",
  diffusionStr_4_2: "1/tau",
  diffusionStr_4_4: "epsilon",
  dimension: "1",
  domainScale: "0.5",
  dt: 0.00005,
  kineticParams:
    "D_v = 8 in [7, 0.1, 9];a = 5;b = 9;epsilon = 0.001;tau=1 in [0,1];",
  maxColourValue: "20",
  minColourValue: -3,
  numSpecies: "4",
  plotType: "line",
  preset: "BrusselatorTuringWave1D",
  reactionStr_1: "w",
  reactionStr_2: "q",
  reactionStr_3: "(a+u^2*v-(b+1)*u-w)/tau",
  reactionStr_4: "(b*u-u^2*v-q)/tau",
  simTitle: "Brusselator with Turing waves",
  spatialStep: "0.01",
  timeDisplay: true,
  brushType: "vline",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["BrusselatorTuringWave2D"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  boundaryConditions_3: "neumann",
  boundaryConditions_4: "neumann",
  brushAction: "smoothadd",
  brushRadius: "0.2",
  initCond_1: "a",
  initCond_2: "b/a",
  colourbar: true,
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_2_2: "0",
  diffusionStr_3_1: "2/tau",
  diffusionStr_3_3: "epsilon",
  diffusionStr_4_2: "1/tau",
  diffusionStr_4_4: "epsilon",
  domainScale: "10",
  dt: 0.00005,
  emboss: true,
  kineticParams:
    "D_v = 8 in [7, 0.1, 9];a = 5;b = 9;epsilon = 0.001;tau=1 in [0,1];",
  maxColourValue: "20",
  minColourValue: -3,
  numSpecies: "4",
  preset: "BrusselatorTuringWave2D",
  reactionStr_1: "w",
  reactionStr_2: "q",
  reactionStr_3: "(a+u^2*v-(b+1)*u-w)/tau",
  reactionStr_4: "(b*u-u^2*v-q)/tau",
  simTitle: "Brusselator with Turing waves",
  spatialStep: "0.02",
  timeDisplay: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["TuringTiling"] = {
  brushRadius: "2",
  initCond_1: "2.0 - 1.1*I_T",
  colourmap: "water",
  diffusionStr_1_1: "0.05",
  diffusionStr_2_2: "2",
  diffusionStr_3_3: "0",
  dt: 0.001,
  embossAmbient: 0.354,
  embossDiffuse: 0.539,
  embossSpecular: 0.115,
  embossTheta: 0.368,
  imagePathTwo: "./images/AperiodicTiling.webp",
  maxColourValue: "4",
  minColourValue: -1,
  numTimestepsPerFrame: 20,
  preset: "TuringTiling",
  resetOnImageLoad: true,
  renderSize: 652,
  reactionStr_1: "2*((1-I_T) - u + u^2*v)",
  reactionStr_2: "1 - u^2*v",
  reactionStr_3: "0",
  simTitle: "Aperiodic tiling",
  spatialStep: "0.1",
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
  showAllOptionsOverride: true,
};

presets["SimplePKPDTumour"] = {
  brushAction: "smoothadd",
  brushRadius: "50",
  initCond_1: "0",
  initCond_3: "exp(-0.01*((x-L_x/2)^2 + (y-L_y/2)^2))",
  colourbar: true,
  colourmap: "water",
  diffusionStr_1_1: "D",
  diffusionStr_2_2: "1",
  diffusionStr_3_3: "1",
  domainScale: "1000",
  dt: 0.001,
  kineticParams:
    "D = 100 in [0,200]; alpha = 0.100 in [0, 0.01, 2];beta = 1 in [0, 0.01, 2];gamma = 0.100 in [0, 0.01, 2];r = 0.500 in [0, 0.01, 2];K = 1 in [0, 0.01, 2];",
  maxColourValue: "0.5",
  numSpecies: "3",
  preset: "SimplePKPDTumour",
  reactionStr_1: "-alpha*C",
  reactionStr_2: "beta*C - gamma*d",
  reactionStr_3: "r*u*(1-u/K) - d*u",
  simTitle: "PKPD tumour model",
  spatialStep: "3",
  speciesNames: "C d u",
  views: [
    {
      whatToPlot: "u",
      colourmap: "turbo",
      flippedColourmap: false,
      minColourValue: "0",
      maxColourValue: "1",
      autoSetColourRange: false,
      plotType: "plane",
      emboss: false,
      contours: false,
      name: "Tumour",
    },
    {
      whatToPlot: "C",
      colourmap: "water",
      flippedColourmap: false,
      minColourValue: "0",
      maxColourValue: "0.5",
      autoSetColourRange: false,
      plotType: "plane",
      emboss: false,
      contours: false,
      name: "Drug",
    },
    {
      whatToPlot: "d",
      colourmap: "lavaflow",
      flippedColourmap: false,
      minColourValue: "0",
      maxColourValue: "0.5",
      autoSetColourRange: false,
      plotType: "plane",
      emboss: false,
      contours: false,
      name: "Dose",
    },
    {
      whatToPlot: "u + C",
      colourmap: "water",
      flippedColourmap: true,
      minColourValue: "0",
      maxColourValue: "1",
      autoSetColourRange: false,
      plotType: "plane",
      emboss: false,
      contours: false,
      name: "Tumour<br />and drug",
    },
  ],
  whatToDraw: "C",
  whatToPlot: "C",
};

presets["heatHeart"] = {
  activeViewInd: 0,
  arrowLengthMax: "0.04",
  arrowScale: "relative",
  arrowX: "-T_x",
  arrowY: "-T_y",
  boundaryConditions_1: "neumann",
  brushRadius: "20",
  initCond_1: "0",
  colourmap: "thermal",
  diffusionStr_1_1: "0.1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "320",
  dt: 0.01,
  flippedColourmap: true,
  kineticParams: "k = 0.01",
  numSpecies: 1,
  preset: "heatHeart",
  reactionStr_1:
    "exp(-0.3*((x-L_x/2 - 40*sqrt(2)* (sin(t*k))^3)^2 + (y-L_y*0.7 - 40*(-(cos(t*k))^3 - (cos(t*k))^2 + 2*cos(t*k)))^2))",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "A heart in the heat equation",
  spatialStep: "1.5",
  speciesNames: "T",
  typesetCustomEqs: false,
  vectorField: true,
  views: [{ name: "$T$ and $-\\nabla T$" }],
  whatToDraw: "T",
  whatToPlot: "T",
};

presets["CoupledCGL"] = {
  activeViewInd: 1,
  brushRadius: "5",
  initCond_1: "1",
  initCond_2: "1",
  initCond_3: "1",
  initCond_4: "1",
  crossDiffusion: true,
  diffusionStr_1_1: "D_1r",
  diffusionStr_1_2: "-D_1i",
  diffusionStr_2_1: "D_1i",
  diffusionStr_2_2: "D_1r",
  diffusionStr_3_3: "D_2r",
  diffusionStr_3_4: "-D_2i",
  diffusionStr_4_3: "D_2i",
  diffusionStr_4_4: "D_2r",
  domainScale: "300",
  dt: 0.001,
  kineticParams:
    "b_1i = 5 in [-5, 5];D_1r = 1;D_1i = 0.1;a_1r = 1;a_1i = 0;b_1r = -1;b_2i = 5;D_2r = 1;D_2i = 0.1;a_2r = 1;a_2i = 0;b_2r = -1;alpha_1 = 4;alpha_2 = 4;",
  maxColourValue: "1",
  minColourValue: "0",
  numSpecies: "4",
  numTimestepsPerFrame: 100,
  preset: "CoupledCGL",
  reactionStr_1:
    "a_1r*u_1-a_1i*v_1+(b_1r*u_1-b_1i*v_1)*((u_1^2+v_1^2)+alpha_1*(u_2^2+v_2^2))",
  reactionStr_2:
    "a_1r*v_1+a_1i*u_1+(b_1r*v_1+b_1i*u_1)*((u_1^2+v_1^2)+alpha_1*(u_2^2+v_2^2))",
  reactionStr_3:
    "a_2r*u_2-a_2i*v_2+(b_2r*u_2-b_2i*v_2)*((u_2^2+v_2^2)+alpha_2*(u_1^2+v_1^2))",
  reactionStr_4:
    "a_2r*v_2+a_2i*u_2+(b_2r*v_2+b_2i*u_2)*((u_2^2+v_2^2)+alpha_2*(u_1^2+v_1^2))",
  simTitle: "Coupled complex Ginzburg–Landau",
  speciesNames: "u_1 v_1 u_2 v_2",
  views: [
    {
      whatToPlot: "u_1^2+v_1^2",
      name: "$|\\psi_1|^2$",
    },
    {
      whatToPlot: "u_2^2+v_2^2",
      name: "$|\\psi_2|^2$",
    },
  ],
  whatToDraw: "v_1",
};

presets["NonlinearSchrodingerSoliton"] = {
  autoSetColourRange: true,
  brushRadius: "5",
  brushEnabled: false,
  initCond_1: "cos(c*x)/cosh(x-L_x/3)",
  initCond_2: "sin(c*x)/cosh(x-L_x/3)",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_2: "-D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: "1",
  domainScale: "30",
  dt: 0.00002,
  kineticParams: "kappa = 1 in [-5, 5];D = 1;c = 10;",
  maxColourValue: "1",
  minColourValue: "0",
  numTimestepsPerFrame: 400,
  plotType: "line",
  preset: "NonlinearSchrodingerSoliton",
  reactionStr_1: "(-kappa*v)*(u^2+v^2)",
  reactionStr_2: "(kappa*u)*(u^2+v^2)",
  reactionStr_3: "0",
  simTitle: "Nonlinear Schr\u00f6dinger with solitons",
  spatialStep: "0.1",
  suppressTryClickingPopup: true,
  timesteppingScheme: "Mid",
  brushType: "vline",
  views: [
    {
      whatToPlot: "u^2+v^2",
      autoSetColourRange: true,
      plotType: "line",
      name: "Default",
    },
  ],
};

presets["PeronaMalik"] = {
  brushAction: "add",
  brushRadius: "20",
  brushValue: "0.3*(RAND-0.5)",
  initCond_1: "(1+tanh(5*(1-I_T-0.4)))/2+sigma*(RAND-0.5)",
  colourmap: "greyscale",
  crossDiffusion: true,
  diffusionStr_1_1: "exp(-D*v)",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.0002,
  embossSpecular: 0.6,
  imagePathOne: "./images/AperiodicTiling.webp",
  imagePathTwo: "./images/Oksendal.webp",
  kineticParams: "D = 5;sigma = 1 in [0, 2]",
  numAlgebraicSpecies: 1,
  preset: "PeronaMalik",
  resetOnImageLoad: true,
  reactionStr_1: "0",
  reactionStr_2: "u_x^2+u_y^2",
  reactionStr_3: "0",
  runningOnLoad: false,
  simTitle: "Perona–Malik",
  spatialStep: "0.2",
  timeDisplay: true,
  tryClickingText: "Press play!",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["FlowSimplePeriodicNetwork"] = {
  activeViewInd: 3,
  algebraicW: true,
  algebraicQ: true,
  boundaryConditions_1: "combo",
  boundaryConditions_2: "combo",
  boundaryConditions_3: "combo",
  brushRadius: "20",
  initCond_1: "1 - x/L_x",
  initCond_3: "1",
  colourbar: true,
  crossDiffusion: true,
  diffusionStr_1_1: "0.1",
  diffusionStr_2_2: "0.1",
  diffusionStr_3_3: "0",
  domainScale: "250",
  kineticParams: "delta  =  0;",
  maxColourValue: "0.4960000216960907",
  minColourValue: -0.0040000081062316895,
  comboStr_1: "Left: Dirichlet = 1; Right: Dirichlet = 0;",
  comboStr_2: "Left: Dirichlet = L_x/100; Right: Neumann = 0;",
  comboStr_3: "Left: Dirichlet = 1; Right: Dirichlet = 1;",
  neumannStr_1: "-H((dx-x))*p_x + H((x+dx-L_x))*p_x",
  numSpecies: "4",
  numTimestepsPerFrame: 400,
  preset: "FlowSimplePeriodicNetwork",
  reactionStr_1: "-delta*(u_x + v_y)",
  reactionStr_2: "(p_x + p_y)*c*0 - u*c_x - v*c_y",
  reactionStr_3: "-p_x",
  reactionStr_4: "-p_y",
  spatialStep: "1",
  speciesNames: "p c u v",
  suppressTryClickingPopup: true,
  timeDisplay: true,
  views: [
    {
      whatToPlot: "u_x+v_y",
      colourmap: "turbo",
      autoSetColourRange: true,
      plotType: "plane",
      name: "Divergence",
    },
    {
      whatToPlot: "u",
      colourmap: "turbo",
      autoSetColourRange: true,
      plotType: "plane",
      name: "u",
    },
    {
      whatToPlot: "v",
      colourmap: "turbo",
      autoSetColourRange: true,
      plotType: "plane",
      name: "v",
    },
    {
      whatToPlot: "c",
      colourmap: "turbo",
      autoSetColourRange: true,
      plotType: "plane",
      name: "c",
    },
  ],
  whatToDraw: "p",
  whatToPlot: "c",
};

presets["Test"] = {
  activeViewInd: 1,
  views: [
    { name: "Activator", whatToPlot: "u" },
    { name: "Inhibitor", whatToPlot: "v" },
  ],
  colourmap: "BlackGreenYellowRedWhite",
  boundaryConditions_1: "combo",
  boundaryConditions_2: "combo",
  comboStr_1:
    "Left: Dirichlet = 1; Right: Neumann = 0; Top: Robin = 0.2; Bottom: Dirichlet = 0;",
  comboStr_2:
    "Left: Dirichlet = 1; Right: Neumann = 0; Top: Robin = 0.2; Bottom: Dirichlet = 0;",
  preset: "Test",
  simTitle: "Testing testing...",
};

presets["ShallowWaterBox"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "combo",
  boundaryConditions_3: "combo",
  brushAction: "smoothadd",
  brushValue: "-0.5",
  brushRadius: "10",
  initCond_1: "0",
  colourmap: "blue",
  diffusionStr_1_1: "D",
  diffusionStr_2_2: "nu",
  diffusionStr_3_3: "nu",
  domainScale: "1000",
  dt: 0.005,
  emboss: true,
  embossAmbient: 1,
  embossShiny: 2,
  embossSmoothness: 0.05,
  embossSpecular: 0.4,
  embossTheta: 0,
  kineticParams: "He = 1;D = 0.01;g = 9.81;f = 1;k = 0.00;nu=0.5;",
  maxColourValue: "0.1",
  minColourValue: -0.05,
  comboStr_2:
    "Left:  Dirichlet = 0; Top:  Neumann = 0; Right:  Dirichlet = 0; Bottom:  Neumann = 0;",
  comboStr_3:
    "Left:  Neumann = 0; Top:  Dirichlet = 0; Right:  Neumann = 0; Bottom:  Dirichlet = 0;",
  numSpecies: "3",
  numTimestepsPerFrame: 100,
  preset: "ShallowWaterBox",
  reactionStr_1: "- (u_x + v_y)",
  reactionStr_2: "-g*h_x - k*u",
  reactionStr_3: "-g*h_y - k*v",
  simTitle: "Shallow water in a box",
  spatialStep: "2",
  speciesNames: "h u v w",
  views: [
    { name: "From<br />above", plotType: "plane" },
    { name: "3D", plotType: "surface" },
  ],
  whatToDraw: "h",
  whatToPlot: "h",
};

presets["ShallowWaterDisk"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  boundaryConditions_3: "dirichlet",
  brushAction: "smoothadd",
  brushValue: "-0.5",
  brushRadius: "40",
  initCond_1: "-exp(-((x-L_x/2)^2 + (y-L_y/2)^2)/L)",
  colourmap: "blue",
  diffusionStr_1_1: "D",
  diffusionStr_2_2: "nu",
  diffusionStr_3_3: "nu",
  domainIndicatorFun: "(x-L_x/2)^2 + (y-L_y/2)^2 < (L/2-1)^2",
  domainScale: "1000",
  domainViaIndicatorFun: true,
  dt: 0.005,
  emboss: true,
  embossAmbient: 1,
  embossShiny: 2,
  embossSmoothness: 0.05,
  embossSpecular: 0.4,
  embossTheta: 0,
  kineticParams: "He = 1;D = 0.01;g = 9.81;f = 1;k = 0.00;nu=0.2;",
  maxColourValue: "0.1",
  minColourValue: -0.05,
  numSpecies: "3",
  numTimestepsPerFrame: 200,
  preset: "ShallowWaterDisk",
  reactionStr_1: "- (u_x + v_y)",
  reactionStr_2: "-g*h_x - k*u",
  reactionStr_3: "-g*h_y - k*v",
  runningOnLoad: false,
  simTitle: "Shallow water in a disk",
  spatialStep: "2",
  speciesNames: "h u v w",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  views: [
    { name: "From<br />above", plotType: "plane" },
    { name: "3D", plotType: "surface" },
  ],
  whatToDraw: "h",
  whatToPlot: "h",
};

presets["Shell"] = {
  brushRadius: "2",
  initCond_1: "0",
  initCond_2: "1",
  colourmap: "BlackGreenYellowRedWhite",
  diffusionStr_1_1: "0.042",
  diffusionStr_2_2: "2",
  diffusionStr_3_3: "0",
  dt: 0.001,
  flippedColourmap: true,
  imagePathOne: "./images/shell_square.webp",
  maxColourValue: "3",
  numTimestepsPerFrame: 200,
  preset: "Shell",
  resetOnImageLoad: true,
  renderSize: 652,
  reactionStr_1: "- u*(1-0.9*I_S)+ u^2*v",
  reactionStr_2: "0.3 - u^2*v",
  reactionStr_3: "0",
  simTitle: "Shell",
  spatialStep: "0.2",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["Banner"] = {
  brushRadius: "1",
  resizeCheckpoints: "crop",
  initialState: "./images/BannerInitState",
  numTimestepsPerFrame: 10,
  preset: "Banner",
  runningOnLoad: false,
  simTitle: "VisualPDE's original banner",
  spatialStep: "0.25",
};

presets["KdV"] = {
  algebraicV: true,
  brushEnabled: false,
  cameraTheta: 0.5,
  initCond_1: "2/((cosh(x-L_x/4))^2)+2*(0.75)^2/((cosh(0.75*(x-0.4*L_x)))^2)",
  initCond_2:
    "-4/((cosh(x-L_x/4))^3)*(sinh(x-L_x/4))-4*(0.75)^3/(cosh(0.75*(x-0.4*L_x))^3)*sinh(0.75*(x-0.4*L_x))",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_2: "-1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: "1",
  domainScale: "40",
  dt: 0.00002,
  kineticParams: "",
  maxColourValue: "2.1",
  minColourValue: -0.1,
  numSpecies: "2",
  numTimestepsPerFrame: 400,
  plotType: "line",
  preset: "KdV",
  reactionStr_1: "-6*v*phi",
  reactionStr_2: "phi_x",
  reactionStr_3: "0",
  simTitle: "Korteweg–De Vries equation",
  spatialStep: "0.25",
  speciesNames: "phi v",
  suppressTryClickingPopup: true,
  timeDisplay: true,
  timesteppingScheme: "Mid",
  brushType: "vline",
  whatToDraw: "phi",
  whatToPlot: "phi",
};

presets["KlausmeierModel"] = {
  activeViewInd: 0,
  brushAction: "smoothadd",
  brushValue: "5",
  brushRadius: "2",
  initCond_1: "RAND",
  initCond_2: "1",
  colourbar: true,
  colourmap: "foliage",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "1",
  diffusionStr_3_3: "0",
  dt: 0.001,
  embossSpecular: 0.1,
  embossTheta: 0.2,
  kineticParams: "a = 2 in [0.01, 0.01, 10];m = 0.540 in [0.2,0.01,1];V=50;",
  maxColourValue: "7.5",
  minColourValue: "0",
  preset: "KlausmeierModel",
  reactionStr_1: "w*n^2-m*n",
  reactionStr_2: "a-w-w*n^2+V*w_x",
  reactionStr_3: "0",
  simTitle: "Klausmeier model",
  speciesNames: "n w",
  views: [
    {
      name: "Foliage",
      colourmap: "foliage",
      emboss: false,
      maxColourValue: "7.5",
      minColourValue: "0.0",
      whatToPlot: "n",
    },
    {
      name: "Water",
      colourmap: "water",
      emboss: true,
      maxColourValue: "0.33",
      minColourValue: "0.0",
      whatToPlot: "w",
    },
  ],
  whatToDraw: "n",
  whatToPlot: "n",
};

presets["BistableAdvection"] = {
  brushRadius: "1",
  brushAction: "smoothadd",
  initCond_1: "0",
  colourmap: "water",
  diffusionStr_1_1: "0.02",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.005,
  kineticParams:
    "a = 0.48  in  [0, 0.01, 1];theta = 1.8 in  [-6.4, 0.01, 6.4];V = 0.5 in  [0, 0.01, 5];",
  numSpecies: 1,
  preset: "BistableAdvection",
  reactionStr_1: "u*(u-a)*(1-u)+V*(cos(theta)*u_x + sin(theta)*u_y)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Bistable advection",
  spatialStep: "0.3",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["AdvectionEquationRotational"] = {
  boundaryConditions_1: "dirichlet",
  brushAction: "smoothadd",
  brushValue: "0.5",
  brushRadius: "3",
  initCond_1: "0",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "320",
  dt: 0.002,
  kineticParams: "V  =  0.10  in  [-5,  0.01,  5];",
  numSpecies: 1,
  preset: "AdvectionEquationRotational",
  reactionStr_1: "V*((y-L_y/2)*u_x-(x-L_x/2)*u_y)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Advection–diffusion equation",
  spatialStep: "1.25",
  views: [
    {
      arrowColour: 65535,
      arrowDensity: 0.5,
      arrowX: "L_x/2 - x",
      arrowY: "L_y/2 - y",
      vectorField: false,
      name: "$u$",
    },
    {
      arrowColour: 16777215,
      arrowDensity: 0.4,
      arrowX: "-(y- L_y/2)",
      arrowY: "x-L_x/2",
      vectorField: true,
      name: "$u$ and $\\v{v}$",
    },
  ],
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["AdvectionEquationDirected"] = {
  brushAction: "smoothadd",
  brushValue: "0.5",
  brushRadius: "3",
  initCond_1: "0",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "320",
  dt: 0.002,
  kineticParams:
    "V  =  6 in  [0,  0.01,  10];theta = -2 in  [-6.4,  0.01,  6.4];",
  numSpecies: 1,
  preset: "AdvectionEquationDirected",
  reactionStr_1: "V*(cos(theta)*u_x + sin(theta)*u_y)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Advection–diffusion equation",
  spatialStep: "1.25",
  views: [
    {
      arrowColour: 65535,
      arrowDensity: 0.5,
      arrowX: "L_x/2 - x",
      arrowY: "L_y/2 - y",
      vectorField: false,
      name: "$u$",
    },
    {
      arrowColour: 16777215,
      arrowDensity: 0.4,
      arrowX: "-cos(theta)",
      arrowY: "-sin(theta)",
      vectorField: true,
      name: "$u$ and $\\v{v}$",
    },
  ],
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["BurgersEquation"] = {
  boundaryConditions_1: "neumann",
  brushAction: "smoothreplace",
  brushRadius: "50",
  brushValue: "0.1",
  initCond_1: "0.1*exp(-0.00005*(x-L_x/5)^2)",
  diffusionStr_1_1: "epsilon",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: "1",
  domainScale: "1000",
  dt: 0.04,
  kineticParams: "epsilon=0.05;",
  maxColourValue: "0.1",
  numSpecies: "1",
  numTimestepsPerFrame: 400,
  plotType: "line",
  preset: "BurgersEquation",
  reactionStr_1: "- u * u_xb",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "(Viscous) Burgers' equation",
  spatialStep: "2",
  suppressTryClickingPopup: true,
  timeDisplay: true,
  brushType: "vline",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["swiftHohenbergRight"] = {
  autoPauseAt: 324,
  brushRadius: "1",
  cameraPhi: 90,
  cameraTheta: 80,
  cameraZoom: 1.5,
  colourmap: "blue-magenta",
  dt: 0.0001,
  emboss: true,
  kineticParams:
    "r = -0.28 in [-2, 2];a = 1.6 in [-2, 2];b = -1 in [-2, 0.1, 2];c = -1;D = 1;P = 1 in [1, 1, 3]",
  maxColourValue: "1.3540157079696655",
  minColourValue: -0.4482521712779999,
  numAlgebraicSpecies: 1,
  parent: "swiftHohenbergLocalised",
  plotType: "surface",
  preset: "swiftHohenbergRight",
  reactionStr_1: "(r-1)*u-2*v+a*u^2+b*u^3+15*u_y",
  spatialStep: "0.3",
  threeDHeightScale: 0.5,
};

presets["swiftHohenbergLocalisedDirectedAdvection"] = {
  algebraicV: true,
  autoSetColourRange: true,
  brushRadius: "1",
  initCond_1:
    "H(1.5-P)*((cos(x-L_x/2) - cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) - cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2)+cos(y-L_y/2) - cos((y-L_y/2+sqrt(3)*(x-L_x/2))/2) - cos((y-L_y/2-sqrt(3)*(x-L_x/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5)) +H(P-1.5)*H(2.5-P)*((cos(x-L_x/2) + cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) + cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5))+H(P-2.5)*((cos(x-L_x/2) + cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) + cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2)+cos(y-L_y/2) + cos((y-L_y/2+sqrt(3)*(x-L_x/2))/2) + cos((y-L_y/2-sqrt(3)*(x-L_x/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5))",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_2: "-D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "150",
  dt: 0.0008,
  kineticParams:
    "r  =  -0.28  in  [-2, 2];a  =  1.6  in  [-2,  2];b  =  -1  in  [-2,  0.1,  2];c  =  -1;D  =  1;P  =  3.0  in  [1,  1,  3];V = 2.000 in  [0, 0.01, 10];theta = -2.00000 in  [-6.4, 0.01, 6.4];",
  maxColourValue: "1.4107916355133057",
  minColourValue: -0.3903360962867737,
  numTimestepsPerFrame: 200,
  preset: "swiftHohenbergLocalisedDirectedAdvection",
  reactionStr_1: "(r-1)*u-2*v+a*u^2+b*u^3+V*(cos(theta)*u_x + sin(theta)*u_y)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Swift–Hohenberg with translating patterns",
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["swiftHohenbergLocalisedRotationalAdvection"] = {
  algebraicV: true,
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushRadius: "1",
  initCond_1:
    "H(1.5-P)*((cos(x-L_x/2) - cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) - cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2)+cos(y-L_y/2) - cos((y-L_y/2+sqrt(3)*(x-L_x/2))/2) - cos((y-L_y/2-sqrt(3)*(x-L_x/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5)) +H(P-1.5)*H(2.5-P)*((cos(x-L_x/2) + cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) + cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5))+H(P-2.5)*((cos(x-L_x/2) + cos((x-L_x/2+sqrt(3)*(y-L_y/2))/2) + cos((x-L_x/2-sqrt(3)*(y-L_y/2))/2)+cos(y-L_y/2) + cos((y-L_y/2+sqrt(3)*(x-L_x/2))/2) + cos((y-L_y/2-sqrt(3)*(x-L_x/2))/2))*exp(-sqrt(0.28)*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/5))",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_2: "-D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "150",
  dt: 0.001,
  kineticParams:
    "r = -0.28  in  [-2,2];a = 1.6  in  [-2, 2];b = -1  in  [-2, 0.1, 2];c = -1;D = 1;P = 3.0 in  [1, 1, 3];V = 0.100 in [0,0.01,1];",
  maxColourValue: "1.2757612466812134",
  minColourValue: -0.3343241214752197,
  numTimestepsPerFrame: 200,
  preset: "swiftHohenbergLocalisedRotationalAdvection",
  reactionStr_1: "(r-1)*u-2*v+a*u^2+b*u^3+V*((y-L_y/2)*u_x-(x-L_x/2)*u_y)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Swift–Hohenberg with spinning patterns",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["GrayScottBanner"] = {
  boundaryConditions_1: "periodic",
  boundaryConditions_2: "periodic",
  colourmap: "turbo",
  contours: true,
  contourNum: 2,
  dt: 0.2,
  emboss: true,
  kineticParams:
    "a=0.017 in [0,0.1];b=0.054  in  [0.04, 0.1];theta=-3.1500000 in [-6.4,0.01,6.4];V=0.01 in [0,0.04];",
  maxColourValue: "0.66",
  numTimestepsPerFrame: 25,
  parent: "GrayScottGlidersAdvecting",
  preset: "GrayScottBanner",
  simTitle: "VisualPDE's banner",
};

presets["GrayScottRollsBanner"] = {
  boundaryConditions_1: "periodic",
  boundaryConditions_2: "periodic",
  contourNum: 2,
  diffusionStr_1_1: "0.35",
  diffusionStr_2_2: "0.55",
  dt: 0.15,
  kineticParams:
    "a = 0.0305 in [0, 0.1];b = 0.054 in [0.04, 0.1];theta = -2.4500000 in [-6.4, 0.01, 6.4];V = 0.04 in [0, 0.04];",
  maxColourValue: "0.66",
  numTimestepsPerFrame: 25,
  parent: "GrayScottGlidersAdvecting",
  preset: "GrayScottRollsBanner",
  simTitle: "Scrolls in Gray–Scott",
};

presets["GrayScottGlidersAdvecting"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushRadius: "5",
  initCond_1: "0",
  initCond_2: "1",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "2",
  diffusionStr_3_3: "0",
  domainScale: "1000",
  kineticParams:
    "a=0.014 in [0,0.1];b=0.054  in  [0.04, 0.1];theta=-3.1500000 in [-6.4,0.01,6.4];V=0.02 in [0,0.04];",
  maxColourValue: "0.5",
  preset: "GrayScottGlidersAdvecting",
  reactionStr_1: "u^2*v - (a+b)*u + V*(cos(theta)*u_x + sin(theta)*u_y)",
  reactionStr_2: "-u^2*v + a*(1 - v)",
  reactionStr_3: "0",
  simTitle: "Gliders in Gray–Scott",
  spatialStep: "3",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["BeamEquation"] = {
  algebraicW: true,
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  boundaryConditions_3: "dirichlet",
  brushType: "vline",
  brushValue: "-8",
  brushRadius: "0.5",
  initCond_1: "0",
  crossDiffusion: true,
  diffusionStr_1_1: "D_c*D",
  diffusionStr_2_2: "0",
  diffusionStr_2_3: "-D",
  diffusionStr_3_1: "D",
  diffusionStr_3_3: "0",
  dimension: "1",
  dt: 0.0001,
  kineticParams: "D  =  10;Q  =  0.000;C  =  0;D_c  =  0.1;",
  maxColourValue: "2.5",
  minColourValue: -8,
  numSpecies: "3",
  plotType: "line",
  preset: "BeamEquation",
  reactionStr_1: "v",
  reactionStr_2: "-Q-C*v",
  reactionStr_3: "0",
  simTitle: "Beam equation",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["CovidInARoom"] = {
  boundaryConditions_1: "combo",
  boundaryConditions_2: "combo",
  brushAction: "smoothadd",
  brushRadius: "20",
  initCond_1: "0",
  initCond_2: "0",
  colourbar: true,
  comboStr_1:
    "Top: Neumann = 0; Bottom: Neumann = 0; Left: Ghost = C_up; Right: Ghost = C_up;",
  comboStr_2:
    "Top: Neumann = 0; Bottom: Neumann = 0; Left: Ghost = C_low; Right: Ghost = C_low;",
  crossDiffusion: true,
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "1",
  diffusionStr_3_3: "0",
  diffusionStr_4_4: "0",
  domainScale: "150",
  dt: 0.001,
  kineticParams:
    "V = 40 in [-40,40];X = 0.5 in [0,1]; Y = 0.5 in [0,1];R = 10 in [0,20];lambda = 0.5;beta = 0;sigma = 0;eta_sus = 0.1 in [0,1];rho_sus = 0.1 in [0,1];I = 1;",
  numAlgebraicSpecies: 1,
  numSpecies: "4",
  numTimestepsPerFrame: 20,
  preset: "CovidInARoom",
  reactionStr_1:
    "R*exp(-0.01*((x-X*L_x)^2+(y-Y*L_y)^2))-(lambda+beta+sigma)*C_low-V*C_low_x",
  reactionStr_2: "-(lambda+beta+sigma)*C_up+V*C_up_x",
  reactionStr_3: "(1-eta_sus)*rho_sus*(C_low + C_up)/2",
  reactionStr_4: "1 - exp(-I*d)",
  simTitle: "Airborne virus transmission",
  spatialStep: "1",
  speciesNames: "C_low C_up d P",
  suppressTryClickingPopup: true,
  views: [
    {
      name: "Probability",
      whatToPlot: "P",
      colourmap: "greyscale",
      flippedColourmap: false,
    },
    {
      name: "Concentration",
      whatToPlot: "C_low + C_up",
      maxColourValue: "5",
      colourmap: "lavaflow",
    },
  ],
  whatToDraw: "C_low",
  whatToPlot: "P",
};

presets["CovidInAStillRoom"] = {
  parent: "CovidInARoom",
  activeViewInd: 1,
  kineticParams:
    "V = 0 in [0,40];X = 0.5 in [0,1]; Y = 0.5 in [0,1];R = 10 in [0,20];lambda = 0.5;beta = 0;sigma = 0;eta_sus = 0.1 in [0,1];rho_sus = 0.1 in [0,1];I = 1;",
  preset: "CovidInAStillRoom",
};

presets["CovidInARoomCircling"] = {
  parent: "CovidInARoom",
  preset: "CovidInARoomCircling",
  kineticParams:
    "V = 40 in [-40,40];R = 10 in [0,20];lambda = 0.5;beta = 0;sigma = 0;eta_sus = 0.1 in [0,1];rho_sus = 0.1 in [0,1];I = 1;",
  reactionStr_1:
    "R*exp(-0.01*((x-L_x/2 + 0.3*cos(t)*L_min)^2+(y-L_y/2 + 0.3*sin(t)*L_min)^2))-(lambda+beta+sigma)*C_low-V*C_low_x",
  runningOnLoad: false,
};

presets["CovidInAStillRoomCircling"] = {
  parent: "CovidInARoomCircling",
  kineticParams:
    "V = 0 in [0,40];X = 0.5 in [0,1]; Y = 0.5 in [0,1];R = 10 in [0,20];lambda = 0.5;beta = 0;sigma = 0;eta_sus = 0.1 in [0,1];rho_sus = 0.1 in [0,1];I = 1;",
  preset: "CovidInAStillRoomCircling",
  runningOnLoad: true,
};

presets["maze"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushRadius: "5",
  initCond_1: "5*exp(-2*((x-L_x/10)^2+(y-19*L_y/20)^2))",
  initCond_2: "1",
  crossDiffusion: true,
  diffusionStr_1_1: "0.6",
  diffusionStr_1_2: "-c*u/(1+u^2)",
  diffusionStr_2_2: "0.002",
  diffusionStr_3_3: "0",
  dirichletStr_2: "0.001",
  domainIndicatorFun: "I_S-0.51",
  domainViaIndicatorFun: true,
  dt: 0.005,
  forceTryClickingPopup: true,
  imagePathOne: "./images/maze.webp",
  kineticParams: "c  =  5;a  =  0.02;b=0.0001;",
  maxColourValue: "1.1202512979507446",
  minColourValue: -0.0007872119313105941,
  preset: "maze",
  renderSize: 1024,
  reactionStr_1: "u*(1-u)*(u+max(v,1)-1)",
  reactionStr_2: "0.02*H(u-0.5)*exp(-0.1*((x-L_x/20)^2+(y-L_y/20)^2))-a*u-b*v",
  reactionStr_3: "0",
  runningOnLoad: false,
  simTitle: "Exploring a maze",
  spatialStep: "0.2",
  tryClickingText: "Press play!",
  views: [
    { name: "🐀", whatToPlot: "u" },
    { name: "🧀", whatToPlot: "v" },
  ],
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["QR"] = {
  brushRadius: "2",
  initCond_1: "0",
  initCond_2: "1",
  colourmap: "greyscale",
  diffusionStr_1_1: "0.042",
  diffusionStr_2_2: "2",
  diffusionStr_3_3: "0",
  dt: 0.001,
  imagePathOne: "./images/qr-code-home.webp",
  maxColourValue: -0.00005137347034178674,
  minColourValue: -3,
  numTimestepsPerFrame: 200,
  preset: "QR",
  resetOnImageLoad: true,
  renderSize: 652,
  reactionStr_1: "- u*(1-0.9*I_S)+ u^2*v",
  reactionStr_2: "0.3 - u^2*v",
  reactionStr_3: "0",
  simTitle: "QR code",
  spatialStep: "0.2",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "-u",
};

presets["unstableHeatEquation"] = {
  boundaryConditions_1: "neumann",
  brushRadius: 20,
  initCond_1: "0",
  diffusionStr_1_1: "60",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "320",
  dt: 0.01,
  numSpecies: 1,
  numTimestepsPerFrame: 1,
  preset: "unstableHeatEquation",
  reactionStr_1: "0",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Unstable heat equation",
  spatialStep: "1.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["bistableTravellingWave"] = {
  arrowDensity: 1,
  arrowX: "u_x*sign(a-0.5)",
  arrowY: "u_y*sign(a-0.5)",
  boundaryConditions_1: "neumann",
  brushRadius: "5",
  brushType: "vline",
  initCond_1: "0",
  colourmap: "water",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.005,
  forceTryClickingPopup: true,
  kineticParams: "a = 0.5 in [0, 0.01, 1];",
  numSpecies: 1,
  preset: "bistableTravellingWave",
  reactionStr_1: "u*(u-a)*(1-u)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  spatialStep: "0.25",
  simTitle: "Bistable travelling waves",
  vectorField: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["bistableSurvival"] = {
  boundaryConditions_1: "neumann",
  brushAction: "smoothreplace",
  brushRadius: "R",
  colourmap: "water",
  diffusionStr_1_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.005,
  initCond_1: "0",
  kineticParams: "a = 0.3 in [0, 1];D = 1 in [0, 2];R = 6 in [0,10];",
  numSpecies: 1,
  preset: "bistableSurvival",
  reactionStr_1: "u*(u-a)*(1-u)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Bistable survival",
  spatialStep: "0.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["brusselator"] = {
  initCond_1: "a",
  initCond_2: "b/a",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "D_v",
  diffusionStr_3_3: "0",
  dt: 0.001,
  kineticParams: "D_v = 8 in [7, 0.1, 9];a=2;b=3;",
  maxColourValue: "4",
  minColourValue: "1",
  preset: "brusselator",
  reactionStr_1: "a+u^2*v-(b+1)*u",
  reactionStr_2: "b*u-u^2*v",
  reactionStr_3: "0",
  simTitle: "Brusselator",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["crossDiffusionSchnakenberg"] = {
  brushRadius: 2,
  initCond_1: "a + b",
  initCond_2: "b / (a+b)^2",
  colourmap: "greyscale",
  crossDiffusion: true,
  diffusionStr_1_1: "1",
  diffusionStr_1_2: "3",
  diffusionStr_2_1: "0.2",
  diffusionStr_2_2: "1",
  diffusionStr_3_3: "0",
  domainScale: "50",
  dt: 0.001,
  kineticParams: "a  =  0.01;b=2.5 in [0,3];D=100;",
  maxColourValue: "3",
  minColourValue: -1,
  numTimestepsPerFrame: 200,
  preset: "crossDiffusionSchnakenberg",
  reactionStr_1: "a - u +u^2*v",
  reactionStr_2: "b - u^2*v",
  reactionStr_3: "0",
  simTitle: "Schnakenberg with cross-diffusion",
  spatialStep: "0.2",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["FHNBeatingHeart"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushValue: "RAND",
  brushRadius: 5.5,
  initCond_1: "0.001",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "10",
  diffusionStr_3_3: "0",
  dirichletStr_1: "-1",
  domainIndicatorFun:
    "(((x-140)/80)^2 + ((y-140)/80)^2 - 1)^3 - ((x-140)/80)^2*((y-140)/80)^3 < 0",
  domainScale: "280",
  domainViaIndicatorFun: true,
  dt: 0.001,
  kineticParams: "e_v=0.5;a_v=.01;a_z=-0.1;",
  minColourValue: -1,
  preset: "FHNBeatingHeart",
  reactionStr_1: "u-u^3-v",
  reactionStr_2: "e_v*(u-a_v*v-a_z)",
  reactionStr_3: "0",
  simTitle: "FitzHugh–Nagumo in a heart",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  views: [{ name: "Default" }, { name: "3D", plotType: "surface" }],
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["FHNGrowingHeart"] = {
  brushRadius: "5.5",
  domainIndicatorFun:
    "(min(L/50 + 0.3*ts*t,L_min/3))^5*(((x-L_x/2)/(min(L/50 + 0.3*ts*t,L_min/3)))^2 + ((y-L_y/2)/(min(L/50 + 0.3*ts*t,L_min/3)))^2 - 1)^3 - (x-L_x/2)^2*(y-L_y/2)^3 < 0",
  dt: 0.002,
  kineticParams: "e_v = 0.5;a_v = .01;a_z = -0.1;ts = 1.0",
  parent: "FHNBeatingHeart",
  preset: "FHNGrowingHeart",
  simTitle: "FitzHugh–Nagumo in a growing heart",
  spatialStep: "0.3",
  squareCanvas: false,
  timesteppingScheme: "Mid",
};

presets["CahnHilliard"] = {
  algebraicV: true,
  brushRadius: 5,
  initCond_1: "tanh(30*(RAND-0.5))",
  crossDiffusion: true,
  diffusionStr_1_1: "r*D*(3*u^2-1)",
  diffusionStr_1_2: "r*-D",
  diffusionStr_2_1: "r*D*a",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0005,
  fixRandSeed: true,
  kineticParams: "r=0.01 in [0, 0.01, 1];a=1;D=1;",
  minColourValue: -1,
  preset: "CahnHilliard",
  reactionStr_1: "r*u*(1-u^2)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Cahn–Hilliard",
  spatialStep: "0.5",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["cyclicCompetition"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  boundaryConditions_3: "neumann",
  brushRadius: "10",
  initCond_1: "1/cosh(sqrt((x-L_x/2)^2+(y-L_y/2)^2))",
  initCond_2: "1/cosh(sqrt((x-L_x/2)^2+(y-L_y/2)^2))",
  initCond_3: "1/cosh(sqrt((x-L_x/2)^2+(y-L_y/2)^2))",
  colourmap: "ice",
  diffusionStr_1_1: "2",
  diffusionStr_2_2: "0.5",
  diffusionStr_3_3: "0.5",
  domainScale: "500",
  dt: 0.005,
  emboss: true,
  fixRandSeed: true,
  kineticParams: "a = 0.8;b = 1.9",
  numSpecies: "3",
  preset: "cyclicCompetition",
  reactionStr_1: "u*(1-u-a*v-b*w)",
  reactionStr_2: "v*(1-b*u-v-a*w)",
  reactionStr_3: "w*(1-a*u-b*v-w)",
  simTitle: "Cyclic competition",
  spatialStep: "1",
  whatToDraw: "u",
  whatToPlot: "u",
  diffusionUStr: "0.000001",
  diffusionVStr: "0.00004",
  diffusionWStr: "0.000008",
  diffusionU: 0.000001,
  diffusionV: 0.00004,
  diffusionW: 0.000008,
};

presets["chemicalBasisOfMorphogenesis"] = {
  brushRadius: 5,
  initCond_1: "3.5*(1-I_S)",
  initCond_2: "1",
  colourmap: "viridis",
  diffusionStr_1_1: "0.1",
  diffusionStr_2_2: "1",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.001,
  imagePathOne: "./images/chemicalBasisOfMorphogenesis.webp",
  kineticParams: "a=0.01 in [0,0.1];b=0.8 in [0,0.01,1];",
  maxColourValue: "3.5",
  preset: "chemicalBasisOfMorphogenesis",
  resetOnImageLoad: true,
  renderSize: 652,
  reactionStr_1: "a - u + u^2*v",
  reactionStr_2: "b - u^2*v",
  reactionStr_3: "0",
  runningOnLoad: false,
  showAllOptionsOverride: true,
  simTitle: "The Chemical Basis of Morphogenesis",
  spatialStep: "0.15",
  squareCanvas: true,
  tryClickingText: "Press play!",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["lambdaOmega"] = {
  activeViewInd: 1,
  brushValue: "2",
  brushRadius: "1",
  initCond_1: "sin(2*pi*x/L_x)*sin(2*pi*y/L_y)",
  colourmap: "BlackGreenYellowRedWhite",
  diffusionStr_1_1: "0.2",
  diffusionStr_2_2: "1",
  diffusionStr_3_3: "0",
  dt: 0.001,
  emboss: true,
  embossSmoothness: 0.2,
  fixRandSeed: true,
  kineticParams: "a=3;c=-1;n=0;m=0;",
  maxColourValue: "3.1",
  numTimestepsPerFrame: 50,
  preset: "lambdaOmega",
  reactionStr_1: "a*u-(u+c*v)*(u^2+v^2)",
  reactionStr_2: "a*v+(c*u-v)*(u^2+v^2)",
  reactionStr_3: "0",
  simTitle: "Spiral waves",
  spatialStep: "0.2",
  views: [
    {
      whatToPlot: "u^2+v^2",
      colourmap: "turbo",
      flippedColourmap: false,
      minColourValue: "0",
      maxColourValue: "3.1",
      autoSetColourRange: false,
      plotType: "plane",
      emboss: true,
      name: "1",
    },
    {
      whatToPlot: "u^2+v^2",
      colourmap: "midnight",
      flippedColourmap: false,
      minColourValue: "0",
      maxColourValue: "3.1",
      autoSetColourRange: false,
      plotType: "plane",
      emboss: true,
      name: 2,
    },
    {
      whatToPlot: "u^2+v^2",
      colourmap: "BlackGreenYellowRedWhite",
      flippedColourmap: false,
      minColourValue: "0",
      maxColourValue: "3.1",
      autoSetColourRange: false,
      plotType: "plane",
      emboss: true,
      name: 3,
    },
  ],
  whatToDraw: "u",
  whatToPlot: "u^2+v^2",
  constantDiffusion: false,
};

presets["complexGinzburgLandau"] = {
  autoSetColourRange: true,
  initCond_1: "sin(n*x*pi/100)*sin(m*y*pi/100)",
  initCond_2: "sin(n*x*pi/100)*sin(m*y*pi/100)",
  crossDiffusion: true,
  diffusionStr_1_1: "D_r",
  diffusionStr_1_2: "-D_i",
  diffusionStr_2_1: "D_i",
  diffusionStr_2_2: "D_r",
  diffusionStr_3_3: "0",
  dt: 0.001,
  kineticParams: "b_i=0 in [-5,5];D_r=0.1;D_i=1;a_r=1;a_i=1;b_r=-1;n=10;m=10;",
  maxColourValue: "1.6760534048080444",
  minColourValue: "0.00015078618889674544",
  reactionStr_1: "a_r*u-a_i*v+(b_r*u-b_i*v)*(u^2+v^2)",
  reactionStr_2: "a_r*v+a_i*u+(b_r*v+b_i*u)*(u^2+v^2)",
  reactionStr_3: "0",
  simTitle: "Complex Ginzburg–Landau",
  whatToPlot: "u^2+v^2",
  preset: "complexGinzburgLandau",
};

presets["GiererMeinhardt"] = {
  brushRadius: 2,
  initCond_2: "1",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "100",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0003,
  kineticParams: "a=0.5;b=1;c=6.1;",
  maxColourValue: "24",
  minColourValue: "0.6",
  numTimestepsPerFrame: 200,
  preset: "GiererMeinhardt",
  reactionStr_1: "a+u^2/v-b*u",
  reactionStr_2: "u^2-c*v",
  reactionStr_3: "0",
  simTitle: "Gierer–Meinhardt",
  spatialStep: "0.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["GiererMeinhardtStripeICs"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushValue: "1.01*u",
  brushRadius: 2,
  initCond_1: "3*(1+cos(n*pi*x/100))",
  initCond_2: "1",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "100",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0003,
  kineticParams: "n=6 in [1, 20];a=0.5;b=1;c=6.1;",
  maxColourValue: "24",
  minColourValue: "0.6",
  numTimestepsPerFrame: 200,
  preset: "GiererMeinhardtStripeICs",
  reactionStr_1: "a+u^2/v-b*u",
  reactionStr_2: "u^2-c*v",
  reactionStr_3: "0",
  simTitle: "Gierer–Meinhardt with unstable stripes ",
  spatialStep: "0.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["GiererMeinhardtStripes"] = {
  brushRadius: 2,
  initCond_2: "1",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "100",
  diffusionStr_3_3: "0",
  domainScale: "200",
  dt: 0.0003,
  kineticParams: "K=0.003 in [0, 0.001, 0.003];a=0.5;b=1;c=6.1;",
  maxColourValue: "9",
  minColourValue: "1.5",
  numTimestepsPerFrame: 200,
  preset: "GiererMeinhardtStripes",
  reactionStr_1: "a+u^2/(v*(1+K*u^2))-b*u",
  reactionStr_2: "u^2-c*v",
  reactionStr_3: "0",
  simTitle: "Gierer–Meinhardt with stripes",
  spatialStep: "0.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["GMHeterogeneous2D"] = {
  autoSetColourRange: true,
  boundaryConditions_1: "dirichlet",
  brushRadius: 2,
  initCond_2: "1",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "55",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0003,
  kineticParams: "A=0 in [-1,0.1,1];B=0 in [0, 0.1, 5];a=1;b=1.5;c=6.1;",
  maxColourValue: "12.804131507873535",
  numTimestepsPerFrame: 200,
  preset: "GMHeterogeneous2D",
  reactionStr_1: "(a+A*x/100)+u^2/v-(b+B*x/100)*u",
  reactionStr_2: "u^2-c*v",
  reactionStr_3: "0",
  simTitle: "Gierer–Meinhardt with heterogeneity",
  spatialStep: "0.5",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["GMHeterogeneousOscillationsMixedBCs"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "neumann",
  brushRadius: "1",
  brushType: "vline",
  cameraZoom: 0.76,
  initCond_1: "1",
  initCond_2: "1",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "55",
  diffusionStr_3_3: "0",
  dimension: 1,
  dirichletStr_2: "1.8",
  domainScale: "50",
  dt: 0.0002,
  kineticParams: "a = 0.95;b = 1.6;c = 3;B = 5",
  maxColourValue: "5",
  numTimestepsPerFrame: 400,
  plotType: "line",
  preset: "GMHeterogeneousOscillationsMixedBCs",
  reactionStr_1: "a+u^2/v-b*u-B*(x/55)*u",
  reactionStr_2: "u^2-c*v",
  reactionStr_3: "0",
  simTitle: "Gierer–Meinhardt with oscillations",
  spatialStep: "0.25",
  squareCanvas: true,
  timeDisplay: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["GMHeterogeneousOscillationsDirichletBCs"] = {
  boundaryConditions_2: "dirichlet",
  brushEnabled: false,
  brushRadius: "5",
  cameraTheta: 0,
  dimension: 1,
  dirichletStr_2: "2",
  domainScale: "70",
  kineticParams: "a = 0.95;b = 1.6;c = 3;B = 4",
  parent: "GMHeterogeneousOscillationsMixedBCs",
  preset: "GMHeterogeneousOscillationsDirichletBCs",
  simTitle: "Gierer–Meinhardt with oscillations",
  spatialStep: "0.25",
  brushType: "vline",
};

presets["FitzHugh-Nagumo"] = {
  brushValue: "0",
  brushRadius: 14,
  initCond_1: "0*RAND",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "20",
  diffusionStr_3_3: "0",
  domainScale: "280",
  dt: 0.001,
  fixRandSeed: true,
  kineticParams: "e_v=0.5;a_v=1;a_z=-0.1;",
  minColourValue: -1,
  numSpecies: "2",
  preset: "FitzHugh-Nagumo",
  reactionStr_1: "u-u^3-v",
  reactionStr_2: "e_v*(u-a_v*v-a_z)",
  reactionStr_3: "0",
  simTitle: "FitzHugh–Nagumo",
  spatialStep: "1.4",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["FitzHugh-Nagumo-Hopf"] = {
  brushValue: "0",
  brushRadius: 14,
  initCond_1: "cos(m*x*pi/280)*cos(m*y*pi/280)",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "26",
  diffusionStr_3_3: "0",
  domainScale: "280",
  dt: 0.001,
  fixRandSeed: true,
  kineticParams: "m=4 in [3,6];e_v=0.2;a_v=.01;a_z=-0.1;",
  minColourValue: -1,
  numSpecies: "2",
  preset: "FitzHugh-Nagumo-Hopf",
  reactionStr_1: "u-u^3-v",
  reactionStr_2: "e_v*(u-a_v*v-a_z)",
  reactionStr_3: "0",
  simTitle: "FitzHugh–Nagumo and Hopf",
  spatialStep: "1.4",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["FitzHugh-Nagumo-3"] = {
  brushRadius: "12.6",
  brushValue: "0",
  initCond_1: "5*(exp(-0.1*((x-L_x/2)^2+(y-L_y/2)^2)))",
  initCond_2: "5*(exp(-0.1*((x-L_x/2)^2+(y-L_y/2)^2)))",
  initCond_3: "5*(exp(-0.1*((x-L_x/2)^2+(y-L_y/2)^2)))",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "40",
  diffusionStr_3_3: "200",
  domainScale: 300,
  dt: 0.002,
  fixRandSeed: true,
  kineticParams:
    "a_v = 0.2 in [0, 0.5];m = 4;e_v = 0.2;e_w = 1;a_w = 0.5;a_z = -0.1;",
  minColourValue: -1,
  numSpecies: "3",
  preset: "FitzHugh-Nagumo-3",
  reactionStr_1: "u-u^3-v",
  reactionStr_2: "e_v*(u-a_v*v-a_w*w-a_z)",
  reactionStr_3: "e_w*(u-w)",
  simTitle: "FitzHugh–Nagumo",
  spatialStep: "1.3",
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["GrayScott"] = {
  colourmap: "viridis",
  initCond_1: "0",
  initCond_2: "1",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "2",
  diffusionStr_3_3: "0",
  domainScale: "1000",
  kineticParams: "a=0.037 in [0,0.1];b=0.06 in [0.04,0.1];",
  maxColourValue: "0.37",
  minColourValue: "0",
  reactionStr_1: "u^2*v - (a+b)*u",
  reactionStr_2: "-u^2*v + a*(1 - v)",
  reactionStr_3: "0",
  simTitle: "Gray–Scott",
  spatialStep: "3",
  whatToDraw: "u",
  whatToPlot: "u",
  preset: "GrayScott",
};

presets["GrayScottGliders"] = {
  initCond_1: "0",
  initCond_2: "1",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "2",
  diffusionStr_3_3: "0",
  domainScale: "1000",
  kineticParams: "a=0.014 in [0,0.1];b=0.054 in [0.04,0.1];",
  maxColourValue: "0.5",
  minColourValue: "0",
  preset: "GrayScottGliders",
  reactionStr_1: "u^2*v - (a+b)*u",
  reactionStr_2: "-u^2*v + a*(1 - v)",
  reactionStr_3: "0",
  simTitle: "Gliders in Gray–Scott",
  spatialStep: "3",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["ImmunotherapyModel"] = {
  autoSetColourRange: true,
  brushValue: "2",
  brushRadius: 3,
  initCond_1: " s_u/(mu-p_u*s_w/(nu*(g_u+s_w/nu)))",
  initCond_3: "s_w/nu",
  diffusionStr_1_1: "0.5",
  diffusionStr_2_2: "0.008",
  diffusionStr_3_3: "4",
  dirichletStr_1: "0",
  dirichletStr_3: "15*(1+cos(t/40))",
  dt: 0.0005,
  fixRandSeed: true,
  kineticParams:
    "c=0.3;mu=0.167;p_u=0.69167;g_u=20;p_v=0.5555556;g_v=0.1;p_w=27.778;g_w=0.001;nu=55.55556;s_w=10;s_u=0.0;",
  maxColourValue: "0.8",
  minColourValue: "0.0",
  numSpecies: "3",
  numTimestepsPerFrame: 200,
  preset: "ImmunotherapyModel",
  reactionStr_1: "c*T-mu*E+p_u*E*S/(g_u+S)+s_u",
  reactionStr_2: "T*(1-T)-p_v*E*T/(g_v+T)",
  reactionStr_3: "p_w*E*T/(g_w+T)-nu*S+s_w",
  simTitle: "Tumour immunotherapy",
  spatialStep: "0.25",
  speciesNames: "E T S",
  timeDisplay: true,
  views: [
    {
      name: "Tumour",
      whatToPlot: "T",
    },
    {
      name: "Effector",
      whatToPlot: "E",
    },
    {
      name: "Signal",
      whatToPlot: "S",
    },
  ],
  whatToDraw: "T",
};

presets["KellerSegel"] = {
  brushValue: "RAND",
  brushRadius: "5.6000000000000005",
  initCond_1: "0.01*RAND",
  crossDiffusion: true,
  diffusionStr_1_1: "1",
  diffusionStr_1_2: "-c*u/(1+u^2)",
  diffusionStr_2_2: "D",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.005,
  emboss: true,
  embossSmoothness: 0.2,
  kineticParams: "c = 4 in [3, 0.1, 4];D = 1 in [0, 1];a = 0.1 in [0, 0.2]",
  maxColourValue: "2.5",
  minColourValue: "0.0004821050970349461",
  preset: "KellerSegel",
  reactionStr_1: "u*(1-u)",
  reactionStr_2: "u-a*v",
  reactionStr_3: "0",
  simTitle: "Keller–Segel",
  spatialStep: "0.2",
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["KellerSegelHeart"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushValue: "RAND",
  brushRadius: 5.5,
  initCond_1: "0.001",
  crossDiffusion: true,
  diffusionStr_1_1: "1",
  diffusionStr_1_2: "-c*u/(1+u^2)",
  diffusionStr_2_2: "1",
  diffusionStr_3_3: "0",
  domainIndicatorFun:
    "(((x-140)/80)^2 + ((y-140)/80)^2 - 1)^3 - ((x-140)/80)^2*((y-140)/80)^3 < 0",
  domainScale: "280",
  domainViaIndicatorFun: true,
  dt: 0.005,
  kineticParams: "c=4;a=0.1;",
  maxColourValue: "2.5",
  minColourValue: "0.0004821050970349461",
  preset: "KellerSegelHeart",
  reactionStr_1: "u*(1-u)",
  reactionStr_2: "u-a*v",
  reactionStr_3: "0",
  simTitle: "Keller–Segel in a heart",
  spatialStep: "0.5",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["KellerSegelGrowingHeart"] = {
  brushRadius: "5.5",
  domainIndicatorFun:
    "(min(L/50 + 0.5*ts*t,L_min/3))^5*(((x-L_x/2)/(min(L/50 + 0.5*ts*t,L_min/3)))^2 + ((y-L_y/2)/(min(L/50 + 0.5*ts*t,L_min/3)))^2 - 1)^3 - (x-L_x/2)^2*(y-L_y/2)^3 < 0",
  kineticParams: "c = 4;a = 0.1;ts = 1.0",
  parent: "KellerSegelHeart",
  preset: "KellerSegelGrowingHeart",
  simTitle: "Keller–Segel in a growing heart",
  spatialStep: "0.3",
  squareCanvas: false,
  timeDisplay: true,
  timesteppingScheme: "Mid",
};

presets["KuramotoSivashinsky"] = {
  autoSetColourRange: true,
  brushValue: "-44",
  brushRadius: "2",
  initCond_1: "-45",
  crossDiffusion: true,
  diffusionStr_1_1: "-1-u",
  diffusionStr_1_2: "-1",
  diffusionStr_2_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: "2",
  dirichletStr_1: "-45",
  domainScale: "150",
  dt: 0.001,
  kineticParams: "a = 0.03;",
  maxColourValue: -15.152745246887207,
  minColourValue: -16.152745246887207,
  numAlgebraicSpecies: 1,
  numSpecies: "2",
  preset: "KuramotoSivashinsky",
  reactionStr_1: "u*v-a*u",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Kuramoto–Sivashinsky",
  spatialStep: "0.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["KuramotoSivashinsky3D"] = {
  parent: "KuramotoSivashinsky",
  plotType: "surface",
  preset: "KuramotoSivashinsky3D",
  simTitle: "Kuramoto–Sivashinsky in 3D",
};

presets["localisedPatterns"] = {
  brushValue: "9",
  brushRadius: 0.1,
  initCond_1: "1",
  initCond_2: "0.99",
  diffusionStr_1_1: "0.0010",
  diffusionStr_2_2: "0.5",
  diffusionStr_3_3: "0",
  domainScale: "10",
  dt: 0.000625,
  maxColourValue: "9",
  minColourValue: "2",
  numTimestepsPerFrame: 200,
  preset: "localisedPatterns",
  renderSize: 700,
  reactionStr_1: "(1+tanh(1*((x-5)*(x-5)+(y-5)*(y-5)-20)))-u+u^2*v",
  reactionStr_2: "0.99 - u^2*v",
  reactionStr_3: "0",
  simTitle: "Schnakenberg with localised patterns",
  spatialStep: "0.05",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["thresholdSimulation"] = {
  boundaryConditions_1: "neumann",
  brushRadius: 5,
  initCond_1: "0",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.002,
  numSpecies: 1,
  numTimestepsPerFrame: 200,
  preset: "thresholdSimulation",
  renderSize: 700,
  reactionStr_1: "u*(1-u)*(u-0.4)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "A threshold for growth",
  spatialStep: "0.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["harshEnvironment"] = {
  boundaryConditions_1: "neumann",
  brushRadius: 2,
  initCond_1: "0.1*exp(-10000*RAND)",
  colourbar: true,
  diffusionStr_1_1: "0.01",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "10",
  dt: 0.0001,
  fixRandSeed: true,
  kineticParams: "K=1;r=1;",
  numSpecies: 1,
  preset: "harshEnvironment",
  reactionStr_1: "r*u*(1-u/K)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Growth in a harsh environment",
  spatialStep: "0.05",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["inhomogHeatEquation"] = {
  boundaryConditions_1: "neumann",
  brushEnabled: false,
  brushRadius: 10,
  initCond_1: "0",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.004,
  kineticParams: "n=4 in [1,10];m=4 in [1,10];",
  minColourValue: -1,
  numSpecies: 1,
  preset: "inhomogHeatEquation",
  reactionStr_1: "cos(n*pi*x/L_x)*cos(m*pi*y/L_y)*pi^2*((n/L_x)^2 + (m/L_y)^2)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Forced heat equation",
  spatialStep: "0.5",
  speciesNames: "T",
  suppressTryClickingPopup: true,
  whatToDraw: "T",
  whatToPlot: "T",
};

presets["inhomogDiffusionHeatEquation"] = {
  boundaryConditions_1: "dirichlet",
  brushRadius: 5,
  initCond_1: "1",
  diffusionStr_1_1:
    "D*(1+E*cos(n*pi*sqrt((x-L_x/2)^2+(y-L_y/2)^2)/sqrt(L_x*L_y)))",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.004,
  kineticParams: "D=1;E=0.99 in [0,1];n=40 in [1,50];",
  numSpecies: 1,
  preset: "inhomogDiffusionHeatEquation",
  reactionStr_1: "0",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Heat equation with inhomogeneous diffusion",
  spatialStep: "0.5",
  speciesNames: "T",
  suppressTryClickingPopup: true,
  whatToDraw: "T",
  whatToPlot: "T",
};

presets["inhomogWaveEquation"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushAction: "smoothreplace",
  brushRadius: 1,
  initCond_1: "0",
  initCond_2: "0",
  crossDiffusion: true,
  diffusionStr_1_1: "C*D",
  diffusionStr_2_1: "D*(1+E*sin(pi*m*x/L_x))*(1+E*sin(n*pi*y/L_y))",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.001,
  kineticParams: "D=1;m=9 in [0,10];n=9 in [0,10];C=0.01;E=0.97",
  preset: "inhomogWaveEquation",
  reactionStr_1: "v",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Inhomogeneous wave equation",
  spatialStep: "0.3",
  views: [
    { name: "$u$", whatToPlot: "u" },
    {
      name: "$v$",
      whatToPlot: "v",
      minColourValue: -0.1,
      maxColourValue: "0.1",
    },
  ],
  whatToPlot: "u",
};

presets["dampedWaveEquation"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushAction: "smoothreplace",
  brushRadius: 2,
  initCond_1: "0",
  crossDiffusion: true,
  diffusionStr_1_1: "C*D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dirichletStr_1: "cos(m*x*pi/100)*cos(m*y*pi/100)",
  domainScale: "100",
  dt: 0.002,
  kineticParams: "D=1;C=0.01;m=8 in [0,10];d=0 in [0,0.01,0.1];",
  minColourValue: -1,
  preset: "dampedWaveEquation",
  reactionStr_1: "v",
  reactionStr_2: "-d*v",
  reactionStr_3: "0",
  simTitle: "Damped wave equation",
  spatialStep: "0.5",
  squareCanvas: true,
  whatToPlot: "u",
};

presets["travellingWave"] = {
  boundaryConditions_1: "neumann",
  brushType: "vline",
  colourbar: true,
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.0005,
  initCond_1: "0.0",
  kineticParams: "K=1 in [0.5,1.5];r=1 in [0,0.1,5];",
  minColourValue: "0",
  maxColourValue: "1.5",
  numSpecies: 1,
  preset: "travellingWave",
  reactionStr_1: "r*u*(1-u/K)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Travelling waves",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["travellingWave1D"] = {
  boundaryConditions_1: "neumann",
  cameraTheta: 0.5,
  initCond_1: "K*(1+tanh(90*(0.05-x/100)))/2",
  colourbar: true,
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.0001,
  kineticParams: "K=1 in [0.5,1.5];r=1 in [0,0.1,5];",
  minColourValue: "0",
  maxColourValue: "1.5",
  numSpecies: 1,
  numTimestepsPerFrame: 400,
  oneDimensional: true,
  plotType: "line",
  preset: "travellingWave1D",
  reactionStr_1: "r*u*(1-u/K)",
  reactionStr_2: "0",
  reactionStr_3: "0",
  renderSize: 1024,
  simTitle: "Travelling waves in 1D",
  suppressTryClickingPopup: true,
  brushType: "vline",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["Sofya"] = {
  brushRadius: "2",
  diffusionStr_1_1: "0.042",
  diffusionStr_2_2: "0.5",
  diffusionStr_3_3: "0",
  dt: 0.001,
  maxColourValue: "2.3",
  numTimestepsPerFrame: 200,
  preset: "Sofya",
  renderSize: 652,
  reactionStr_1: "(1-I_S) - u + u^2*v",
  reactionStr_2: "1 - u^2*v",
  reactionStr_3: "0",
  showAllOptionsOverride: true,
  simTitle: "Sofya Kovalevskaya",
  spatialStep: "0.2",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["Alan"] = {
  boundaryConditions_1: "periodic",
  boundaryConditions_2: "periodic",
  brushRadius: 2,
  diffusionStr_1_1: "0.042",
  diffusionStr_2_2: "2",
  domainScale: "100",
  dt: 0.002,
  maxColourValue: "2.3",
  preset: "Alan",
  renderSize: 652,
  reactionStr_1: "(1-I_T) - u + u^2*v",
  reactionStr_2: "1 - u^2*v",
  showAllOptionsOverride: true,
  simTitle: "Turing on Turing",
  spatialStep: "0.3",
  squareCanvas: true,
  suppressTryClickingPopup: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["heatEquation"] = {
  boundaryConditions_1: "neumann",
  brushRadius: 20,
  initCond_1: "0",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "320",
  dt: 0.01,
  numSpecies: 1,
  preset: "heatEquation",
  reactionStr_1: "0",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Heat equation",
  spatialStep: "1.5",
  speciesNames: "T",
  views: [
    {
      arrowLengthMax: "1",
      arrowScale: "auto",
      arrowX: "L_x/2 - x",
      arrowY: "L_y/2 - y",
      colourmap: "turbo",
      flippedColourmap: false,
      vectorField: false,
      name: "$T$",
    },
    {
      arrowLengthMax: "0.04",
      arrowScale: "relative",
      arrowX: "-T_x",
      arrowY: "-T_y",
      colourmap: "thermal",
      flippedColourmap: true,
      vectorField: true,
      name: "$T$ and $\\nabla T$",
    },
  ],
  whatToDraw: "T",
  whatToPlot: "T",
};

presets["heatEquation1D"] = {
  boundaryConditions_1: "neumann",
  brushRadius: 20,
  cameraTheta: 0.5,
  cameraZoom: 1,
  initCond_1: "cos(m*pi*x/320)",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: 1,
  domainScale: "320",
  dt: 0.01,
  kineticParams: "m=8 in [1,10];",
  minColourValue: -1,
  numSpecies: 1,
  oneDimensional: true,
  plotType: "line",
  preset: "heatEquation1D",
  reactionStr_1: "0",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Heat equation in 1D",
  spatialStep: "1.5",
  speciesNames: "T",
  whatToDraw: "T",
  whatToPlot: "T",
};

presets["heatEquation1DValidity"] = {
  backgroundColour: 14606046,
  brushEnabled: false,
  initCond_1: "1/sqrt(t_0)*exp(-(x-L_x/2)^2/(4*t_0))",
  colourbar: true,
  kineticParams: "t_0 = 10",
  maxColourValue: "0.32",
  minColourValue: "0",
  overlay: true,
  overlayColour: 16777215,
  overlayExpr: "1/sqrt(t+t_0)*exp(-(x-L_x/2)^2/(4*(t+t_0)))",
  overlayLineWidthMul: 0.2,
  parent: "heatEquation1D",
  preset: "heatEquation1DValidity",
  spatialStep: "1.5",
  timeDisplay: true,
  brushType: "vline",
};

presets["waveEquation"] = {
  brushAction: "smoothreplace",
  brushRadius: 5,
  crossDiffusion: true,
  diffusionStr_1_1: "C*D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "100",
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  dt: 0.002,
  kineticParams: "D=1 in [1,100]; C=0.01",
  preset: "waveEquation",
  reactionStr_1: "v",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Wave equation",
  spatialStep: "0.5",
};

presets["waveEquationICs"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushAction: "smoothreplace",
  brushRadius: 5,
  initCond_1: "cos(n*pi*x/L_x)*cos(m*pi*y/L_y)",
  crossDiffusion: true,
  diffusionStr_1_1: "C*D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.001,
  kineticParams: "D=1;C=0;n=4 in [1,10];m=4 in [1,10];",
  minColourValue: -1,
  preset: "waveEquationICs",
  reactionStr_1: "v",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Wave equation with initial data",
  spatialStep: "0.5",
  suppressTryClickingPopup: true,
  whatToPlot: "u",
};

presets["waveEquation1D"] = {
  arrowDensity: 1,
  brushAction: "smoothreplace",
  brushEnabled: false,
  brushRadius: "5",
  initCond_1: "exp(-(35*pi)*(x/100-0.5)^2)",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: 1,
  dt: 0.002,
  kineticParams: "D = 1",
  overlay: true,
  overlayExpr:
    "(exp(-(35*pi)*(mod(x+D*t,L_x)/100-0.5)^2)+exp(-(35*pi)*(mod(x-D*t,L_x)/100-0.5)^2))/2",
  overlayLineWidthMul: 0.2,
  plotType: "line",
  preset: "waveEquation1D",
  renderSize: 1024,
  reactionStr_1: "v",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Wave equation in 1D",
  spatialStep: "0.5",
  suppressTryClickingPopup: true,
  brushType: "vline",
  whatToPlot: "u",
};

presets["waveEquation1DValidity"] = {
  backgroundColour: 14606046,
  boundaryConditions_1: "periodic",
  boundaryConditions_2: "periodic",
  brushRadius: "5",
  cameraTheta: 0,
  dimension: 1,
  kineticParams: "D = 1;C = 0.001",
  overlay: true,
  overlayColour: 16777215,
  overlayExpr:
    "(exp(-(35*pi)*(mod(x+D*t,L_x)/100-0.5)^2)+exp(-(35*pi)*(mod(x-D*t,L_x)/100-0.5)^2))/2",
  overlayLineWidthMul: 0.2,
  parent: "waveEquation1D",
  preset: "waveEquation1DValidity",
  spatialStep: "0.5",
  brushType: "vline",
};

presets["waveEquation3D"] = {
  boundaryConditions_1: "neumann",
  boundaryConditions_2: "neumann",
  brushAction: "smoothreplace",
  brushRadius: 5,
  cameraTheta: 31.171766170073973,
  cameraPhi: 6.119583405771913,
  initCond_1: "exp(-(35*pi)*(x/100-0.5)^2)*exp(-(35*pi)*(y/100-0.5)^2)",
  crossDiffusion: true,
  diffusionStr_1_1: "C*D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.002,
  kineticParams: "D=1; C=0.01",
  plotType: "surface",
  preset: "waveEquation3D",
  reactionStr_1: "v",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Wave equation in 3D",
  spatialStep: "0.5",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["Schnakenberg"] = {
  brushRadius: 2,
  initCond_1: "a + b",
  initCond_2: "b / (a+b)^2",
  colourmap: "lavaflow",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "D_v",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0005,
  emboss: true,
  embossSmoothness: 0.3,
  embossPhi: 0.9,
  kineticParams: "D_v = 100 in [0, 100];a = 0.01;b = 2;",
  maxColourValue: "8",
  minColourValue: "0",
  numTimestepsPerFrame: 200,
  preset: "Schnakenberg",
  reactionStr_1: "a - u +u^2*v",
  reactionStr_2: "b - u^2*v",
  reactionStr_3: "0",
  simTitle: "Schnakenberg",
  spatialStep: "0.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["SchnakenbergHopf"] = {
  brushRadius: 2,
  initCond_1: "a+b",
  initCond_2: "b/(a+b)^2",
  colourmap: "lavaflow",
  diffusionStr_1_1: "1",
  diffusionStr_2_2: "8",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.001,
  emboss: true,
  embossSmoothness: 0.3,
  embossPhi: 0.9,
  kineticParams: "a = 0.05 in [0, 0.005, 0.1]; b = 0.5 in [0, 0.1, 1];",
  maxColourValue: "3.5",
  numTimestepsPerFrame: 200,
  preset: "SchnakenbergHopf",
  reactionStr_1: "a - u +u^2*v",
  reactionStr_2: "b - u^2*v",
  reactionStr_3: "0",
  simTitle: "Schnakenberg and Hopf",
  spatialStep: "0.5",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["SchnakenbergGrowingDisk"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushRadius: "2",
  domainIndicatorFun: "min((15+ts*t),L_min/2)^2 - ((x-L_x/2)^2 + (y-L_y/2)^2)",
  domainScale: "400",
  domainViaIndicatorFun: true,
  dt: 0.001,
  initCond_1: "a + b+RANDN",
  kineticParams: "D_v = 100 in [0, 100];a = 0.01;b = 2;ts=1.0",
  numTimestepsPerFrame: 100,
  parent: "Schnakenberg",
  preset: "SchnakenbergGrowingDisk",
  simTitle: "Schnakenberg on a growing disk",
  spatialStep: "0.8",
  timesteppingScheme: "Mid",
};

presets["plateEquation"] = {
  suppressTryClickingPopup: true,
  algebraicW: true,
  brushValue: "-8",
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  boundaryConditions_3: "dirichlet",
  initCond_1: "-4",
  crossDiffusion: true,
  diffusionStr_1_1: "D_c*D",
  diffusionStr_2_2: "0",
  diffusionStr_2_3: "-D",
  diffusionStr_3_1: "D",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0001,
  kineticParams: "D=10;Q=0.003;C=0.1;D_c=0.1",
  maxColourValue: "0",
  minColourValue: -8,
  numSpecies: "3",
  preset: "plateEquation",
  reactionStr_1: "v",
  reactionStr_2: "-Q-C*v",
  reactionStr_3: "0",
  simTitle: "Deformation of a plate",
  spatialStep: "0.5",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["plateEquation3D"] = {
  algebraicW: true,
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  boundaryConditions_3: "dirichlet",
  brushRadius: 2,
  brushValue: "-8",
  cameraTheta: 131.97379772425356,
  cameraPhi: -156.79802955664945,
  initCond_1: "0",
  crossDiffusion: true,
  diffusionStr_1_1: "D_c*D",
  diffusionStr_2_2: "0",
  diffusionStr_2_3: "-D",
  diffusionStr_3_1: "D",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0001,
  kineticParams: "D=10;Q=0.000;C=0.1;D_c=0.1;",
  minColourValue: -3,
  numSpecies: "3",
  plotType: "surface",
  preset: "plateEquation3D",
  reactionStr_1: "v",
  reactionStr_2: "-Q-C*v",
  reactionStr_3: "0",
  simTitle: "Deformation of a plate",
  spatialStep: "0.5",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["stabilizedSchrodingerEquation"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushEnabled: false,
  initCond_1: "sin(n*pi*x/100)*sin(m*pi*y/100)",
  crossDiffusion: true,
  diffusionStr_1_1: "C*D",
  diffusionStr_1_2: "-D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "C*D",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0001,
  kineticParams: "D=1; C=0.004;n=3 in [0,10];m=3 in [0,10]",
  preset: "stabilizedSchrodingerEquation",
  reactionStr_1: "0",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Schr\u00f6dinger",
  squareCanvas: true,
  spatialStep: "0.5",
  timesteppingScheme: "Mid",
  views: [
    {
      name: "$\\lvert \\psi\\rvert^2$",
      whatToPlot: "u^2 + v^2",
      minColourValue: "0",
      maxColourValue: "1",
    },
    {
      name: "$\\Re(\\psi)$",
      whatToPlot: "u",
      minColourValue: -1,
      maxColourValue: "1",
    },
    {
      name: "$\\Im(\\psi)$",
      whatToPlot: "v",
      minColourValue: -1,
      maxColourValue: "1",
    },
  ],
  whatToDraw: "u",
  whatToPlot: "u^2+v^2",
};

presets["stabilizedSchrodingerEquationPotential"] = {
  autoSetColourRange: true,
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushEnabled: false,
  initCond_1: "(sin(pi*x/100)*sin(pi*y/100))^10",
  crossDiffusion: true,
  diffusionStr_1_1: "C*D",
  diffusionStr_1_2: "-D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "C*D",
  diffusionStr_3_3: "0",
  domainScale: "100",
  dt: 0.0001,
  kineticParams: "D=1; C=0.004;n=15 in [0,50];m=15 in [0,50]",
  maxColourValue: "1.5228073596954346",
  preset: "stabilizedSchrodingerEquationPotential",
  reactionStr_1: "-sin(n*pi*x/100)*sin(m*pi*y/100)*v",
  reactionStr_2: "sin(n*pi*x/100)*sin(m*pi*y/100)*u",
  reactionStr_3: "0",
  simTitle: "Schr\u00f6dinger: potential",
  spatialStep: "0.5",
  squareCanvas: true,
  timesteppingScheme: "Mid",
  whatToDraw: "u",
  whatToPlot: "u^2+v^2",
};

presets["stabilizedSchrodinger1D"] = {
  boundaryConditions_1: "dirichlet",
  boundaryConditions_2: "dirichlet",
  brushEnabled: false,
  brushRadius: "5",
  initCond_1: "exp(-(0.5*pi/s^2)*(x/100-x0)^2)*cos(a*x)/N",
  initCond_2: "exp(-(0.5*pi/s^2)*(x/100-x0)^2)*sin(a*x)/N",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_2: "-D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dimension: 1,
  dt: 0.0002,
  integrate: true,
  kineticParams: "D = 1;a = 4;s = 0.08;x0 = 0.5;V = 100;N = 2.8279;d = 0.000",
  maxColourValue: "0.35",
  numTimestepsPerFrame: 200,
  plotType: "line",
  preset: "stabilizedSchrodinger1D",
  renderSize: 1024,
  reactionStr_1: "V*v*(x/100-0.5)^2",
  reactionStr_2: "-V*u*(x/100-0.5)^2",
  reactionStr_3: "0",
  simTitle: "Schr\u00f6dinger in 1D",
  spatialStep: "0.2",
  timeDisplay: true,
  timesteppingScheme: "Mid",
  brushType: "vline",
  whatToDraw: "u",
  whatToPlot: "u^2+v^2",
};

presets["stabilizedSchrodinger1DValidity"] = {
  autoPause: true,
  parent: "stabilizedSchrodinger1D",
  preset: "stabilizedSchrodinger1DValidity",
  simTitle: "Schr\u00f6dinger in 1D",
  timesteppingScheme: "Euler",
};

presets["Subcriticality"] = {
  preset: "Subcriticality",
  parent: "subcriticalGS",
};

presets["subcriticalGS"] = {
  preset: "subcriticalGS",
  reactionStr_1: "-u*v^2 + 0.037*(1.0 - u)",
  reactionStr_2: "u*v^2 - (0.037+0.06)*v",
  simTitle: "Gray–Scott: subcriticality",
  whatToDraw: "v",
  whatToPlot: "v",
};

presets["swiftHohenberg"] = {
  algebraicV: true,
  autoSetColourRange: true,
  boundaryConditions_1: "periodic",
  boundaryConditions_2: "periodic",
  initCond_1: "0",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_2: "-D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  dt: 0.0005,
  kineticParams:
    "r=0.1 in [-2,0.1,2];a=1 in [-2,0.1,2];b=1 in [-2,0.1,2];c=-1;D=1;",
  maxColourValue: "1.44703209400177",
  minColourValue: -1.2287852764129639,
  numTimestepsPerFrame: 200,
  preset: "swiftHohenberg",
  renderSize: 512,
  reactionStr_1: "(r-1)*u-2*v+a*u^2+b*u^3+c*u^5",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Swift–Hohenberg",
  squareCanvas: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["swiftHohenbergLocalised"] = {
  algebraicV: true,
  autoSetColourRange: true,
  boundaryConditions_1: "periodic",
  boundaryConditions_2: "periodic",
  brushRadius: 1,
  initCond_1:
    "H(1.5-P)*((cos(x-75) - cos((x-75+sqrt(3)*(y-75))/2) - cos((x-75-sqrt(3)*(y-75))/2)+cos(y-75) - cos((y-75+sqrt(3)*(x-75))/2) - cos((y-75-sqrt(3)*(x-75))/2))*exp(-sqrt(0.28)*sqrt((x-75)^2+(y-75)^2)/5)) +H(P-1.5)*H(2.5-P)*((cos(x-75) + cos((x-75+sqrt(3)*(y-75))/2) + cos((x-75-sqrt(3)*(y-75))/2))*exp(-sqrt(0.28)*sqrt((x-75)^2+(y-75)^2)/5))+H(P-2.5)*((cos(x-75) + cos((x-75+sqrt(3)*(y-75))/2) + cos((x-75-sqrt(3)*(y-75))/2)+cos(y-75) + cos((y-75+sqrt(3)*(x-75))/2) + cos((y-75-sqrt(3)*(x-75))/2))*exp(-sqrt(0.28)*sqrt((x-75)^2+(y-75)^2)/5))",
  crossDiffusion: true,
  diffusionStr_1_1: "0",
  diffusionStr_1_2: "-D",
  diffusionStr_2_1: "D",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "150",
  dt: 0.0005,
  kineticParams:
    "r=-0.28 in [-2,2];a=1.6 in [-2,2];b=-1 in [-2,0.1,2];c=-1;D=1;P=1 in [1,1,3];",
  maxColourValue: "1.325366735458374",
  minColourValue: -0.4033077657222748,
  numTimestepsPerFrame: 200,
  preset: "swiftHohenbergLocalised",
  reactionStr_1: "(r-1)*u-2*v+a*u^2+b*u^3",
  reactionStr_2: "0",
  reactionStr_3: "0",
  simTitle: "Swift–Hohenberg with localised patterns",
  squareCanvas: true,
  timeDisplay: true,
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["blank"] = {
  arrowX: "0",
  arrowY: "0",
  brushRadius: "0.05",
  colourmap: "viridis",
  diffusionStr_1_1: "0",
  diffusionStr_2_2: "0",
  diffusionStr_3_3: "0",
  domainScale: "1",
  initCond_1: "0",
  numSpecies: 1,
  parent: "default",
  preset: "blank",
  reactionStr_1: "0",
  reactionStr_2: "0",
  reactionStr_3: "0",
  spatialStep: "0.005",
  whatToDraw: "u",
  whatToPlot: "u",
};

presets["default"] = {
  activeViewInd: 0,
  arrowColour: 0x00ffff,
  arrowDensity: 0.5,
  arrowLengthMax: "1",
  arrowScale: "auto",
  arrowX: "L_x/2 - x",
  arrowY: "L_y/2 - y",
  autoPause: false,
  autoPauseAt: 10,
  autoSetColourRange: false,
  backgroundColour: 0xffffff,
  boundaryConditions_1: "periodic",
  boundaryConditions_2: "periodic",
  boundaryConditions_3: "periodic",
  boundaryConditions_4: "periodic",
  brushAction: "replace",
  brushEnabled: true,
  brushRadius: "5",
  brushType: "circle",
  brushValue: "1",
  cameraPhi: 30,
  cameraTheta: 30,
  cameraZoom: 0.8,
  colourbar: false,
  colourmap: "turbo",
  comboStr_1: "",
  comboStr_2: "",
  comboStr_3: "",
  comboStr_4: "",
  contours: false,
  contourColour: 0x000000,
  contourEpsilon: 0.01,
  contourNum: 5,
  crossDiffusion: false,
  customSurface: false,
  diffusionStr_1_1: "0.04",
  diffusionStr_1_2: "0",
  diffusionStr_1_3: "0",
  diffusionStr_1_4: "0",
  diffusionStr_2_1: "0",
  diffusionStr_2_2: "0.02",
  diffusionStr_2_3: "0",
  diffusionStr_2_4: "0",
  diffusionStr_3_1: "0",
  diffusionStr_3_2: "0",
  diffusionStr_3_3: "0.02",
  diffusionStr_3_4: "0",
  diffusionStr_4_1: "0",
  diffusionStr_4_2: "0",
  diffusionStr_4_3: "0",
  diffusionStr_4_4: "0",
  dimension: "2",
  dirichletStr_1: "0",
  dirichletStr_2: "0",
  dirichletStr_3: "0",
  dirichletStr_4: "0",
  domainIndicatorFun: "(L_min/2)^2 - ((x-L_x/2)^2 + (y-L_y/2)^2)",
  domainScale: "100",
  domainViaIndicatorFun: false,
  dt: 0.1,
  emboss: false,
  embossAmbient: 0.5,
  embossDiffuse: 0.6,
  embossPhi: 1.5708,
  embossShiny: 10.0,
  embossSmoothness: 0.2,
  embossSpecular: 0.2,
  embossTheta: 0.7854,
  fixRandSeed: false,
  flippedColourmap: false,
  forceManualInterpolation: false,
  forceTryClickingPopup: false,
  guiUpdatePeriod: 2,
  imagePathOne: "./images/Sofya.webp",
  imagePathTwo: "./images/Alan.webp",
  initialState: "",
  initCond_1: "1.0",
  initCond_2: "0",
  initCond_3: "0",
  initCond_4: "0",
  integrate: false,
  kineticParams: "",
  lineWidthMul: 1,
  maxColourValue: "1.0",
  minColourValue: "0.0",
  minX: "0.0",
  minY: "0.0",
  neumannStr_1: "0",
  neumannStr_2: "0",
  neumannStr_3: "0",
  neumannStr_4: "0",
  numAlgebraicSpecies: 0,
  numSpecies: 2,
  numTimestepsPerFrame: 100,
  oneDimensional: false,
  optimiseFPS: true,
  overlay: false,
  overlayColour: 0x000000,
  overlayEpsilon: 0.005,
  overlayExpr: "1",
  overlayLineWidthMul: 1,
  parent: null,
  performanceMode: false,
  plotType: "plane",
  preset: "default",
  randSeed: 0,
  resetFromCheckpoints: true,
  resetOnImageLoad: false,
  resizeCheckpoints: "stretch",
  renderSize: 512,
  reactionStr_1: "-u*v^2 + 0.037*(1.0 - u)",
  reactionStr_2: "u*v^2 - (0.037+0.06)*v",
  reactionStr_3: "u*v^2 - (0.037+0.06)*v",
  reactionStr_4: "0",
  robinStr_1: "0",
  robinStr_2: "0",
  robinStr_3: "0",
  robinStr_4: "0",
  runningOnLoad: true,
  setSeed: false,
  showComboStr: false,
  showGhostBCs: false,
  showStats: false,
  spatialStep: "0.5",
  speciesNames: "u v w q",
  squareCanvas: false,
  suppressTryClickingPopup: false,
  surfaceFun: "0",
  threeDHeightScale: 0.7,
  timeDisplay: false,
  timescales: false,
  timescale_1: "1",
  timescale_2: "1",
  timescale_3: "1",
  timescale_4: "1",
  timesteppingScheme: "Euler",
  tryClickingText: "Try clicking!",
  typesetCustomEqs: true,
  vectorField: false,
  views: [],
  whatToDraw: "v",
  whatToPlot: "v",
};

export function getPreset(id) {
  // Case insensitive lookup.
  const lowerCasePresets = lowerCaseKeys(presets);
  if (id == null || id == undefined) return presets["GrayScott"];
  id = id.toLowerCase();
  if (lowerCasePresets.hasOwnProperty(id)) return lowerCasePresets[id];
  return presets["GrayScott"];
}

export function getListOfPresetNames() {
  return Object.keys(presets);
}

function lowerCaseKeys(obj) {
  return Object.entries(obj).reduce((carry, [key, value]) => {
    carry[key.toLowerCase()] = value;
    return carry;
  }, {});
}

export function coerceOptions(options) {
  // Loop through entries of options and coerce to the type of the default options.
  const defaultOptions = presets["default"];
  for (const [key, value] of Object.entries(options)) {
    if (defaultOptions.hasOwnProperty(key)) {
      options[key] = coerceType(value, defaultOptions[key]);
    }
  }
}

function coerceType(value, defaultValue) {
  if (typeof defaultValue === "number") {
    return parseFloat(value);
  } else if (typeof defaultValue === "boolean") {
    return value === "true" || value == 1;
  } else {
    return value;
  }
}

export function getUserTextFields() {
  return [
    "brushValue",
    "initCond_1",
    "initCond_2",
    "initCond_3",
    "initCond_4",
    "comboStr_1",
    "comboStr_2",
    "comboStr_3",
    "comboStr_4",
    "diffusionStr_1_1",
    "diffusionStr_1_2",
    "diffusionStr_1_3",
    "diffusionStr_1_4",
    "diffusionStr_2_1",
    "diffusionStr_2_2",
    "diffusionStr_2_3",
    "diffusionStr_2_4",
    "diffusionStr_3_1",
    "diffusionStr_3_2",
    "diffusionStr_3_3",
    "diffusionStr_3_4",
    "diffusionStr_4_1",
    "diffusionStr_4_2",
    "diffusionStr_4_3",
    "diffusionStr_4_4",
    "dirichletStr_1",
    "dirichletStr_2",
    "dirichletStr_3",
    "dirichletStr_4",
    "domainIndicatorFun",
    "overlayExpr",
    "neumannStr_1",
    "neumannStr_2",
    "neumannStr_3",
    "neumannStr_4",
    "reactionStr_1",
    "reactionStr_2",
    "reactionStr_3",
    "reactionStr_4",
    "robinStr_1",
    "robinStr_2",
    "robinStr_3",
    "robinStr_4",
    "surfaceFun",
    "whatToDraw",
    "whatToPlot",
  ];
}

export function getFieldsInView() {
  return [
    "arrowColour",
    "arrowDensity",
    "arrowLengthMax",
    "arrowScale",
    "arrowX",
    "arrowY",
    "autoSetColourRange",
    "cameraTheta",
    "cameraPhi",
    "cameraZoom",
    "colourmap",
    "colourbar",
    "contours",
    "contourColour",
    "contourEpsilon",
    "contourNum",
    "customSurface",
    "emboss",
    "embossAmbient",
    "embossDiffuse",
    "embossPhi",
    "embossShiny",
    "embossSmoothness",
    "embossSpecular",
    "embossTheta",
    "flippedColourmap",
    "lineWidthMul",
    "maxColourValue",
    "minColourValue",
    "overlay",
    "overlayColour",
    "overlayEpsilon",
    "overlayExpr",
    "overlayLineWidthMul",
    "plotType",
    "scaleArrows",
    "surfaceFun",
    "threeDHeightScale",
    "vectorField",
    "whatToPlot",
  ];
}

export function getOldPresetFieldsToNew() {
  return {
    boundaryConditionsU: "boundaryConditions_1",
    boundaryConditionsV: "boundaryConditions_2",
    boundaryConditionsW: "boundaryConditions_3",
    boundaryConditionsQ: "boundaryConditions_4",
    clearValueU: "initCond_1",
    clearValueV: "initCond_2",
    clearValueW: "initCond_3",
    clearValueQ: "initCond_4",
    comboStrU: "comboStr_1",
    comboStrV: "comboStr_2",
    comboStrW: "comboStr_3",
    comboStrQ: "comboStr_4",
    diffusionStrUU: "diffusionStr_1_1",
    diffusionStrUV: "diffusionStr_1_2",
    diffusionStrUW: "diffusionStr_1_3",
    diffusionStrUQ: "diffusionStr_1_4",
    diffusionStrVU: "diffusionStr_2_1",
    diffusionStrVV: "diffusionStr_2_2",
    diffusionStrVW: "diffusionStr_2_3",
    diffusionStrVQ: "diffusionStr_2_4",
    diffusionStrWU: "diffusionStr_3_1",
    diffusionStrWV: "diffusionStr_3_2",
    diffusionStrWW: "diffusionStr_3_3",
    diffusionStrWQ: "diffusionStr_3_4",
    diffusionStrQU: "diffusionStr_4_1",
    diffusionStrQV: "diffusionStr_4_2",
    diffusionStrQW: "diffusionStr_4_3",
    diffusionStrQQ: "diffusionStr_4_4",
    dirichletStrU: "dirichletStr_1",
    dirichletStrV: "dirichletStr_2",
    dirichletStrW: "dirichletStr_3",
    dirichletStrQ: "dirichletStr_4",
    fixRandSeed: "setSeed",
    neumannStrU: "neumannStr_1",
    neumannStrV: "neumannStr_2",
    neumannStrW: "neumannStr_3",
    neumannStrQ: "neumannStr_4",
    reactionStrU: "reactionStr_1",
    reactionStrV: "reactionStr_2",
    reactionStrW: "reactionStr_3",
    reactionStrQ: "reactionStr_4",
    robinStrU: "robinStr_1",
    robinStrV: "robinStr_2",
    robinStrW: "robinStr_3",
    robinStrQ: "robinStr_4",
    typeOfBrush: "brushType",
  };
}
